{"version":3,"sources":["modules/chats.js","services/firebase.js","helpers/common.js","components/PublicRoute.js","components/PrivateRoute.js","containers/SignUp.js","containers/Login.js","components/FriendItem.js","components/FriendList.js","components/FriendAdd.js","components/Message.js","components/InputBox.js","components/TabBox.js","containers/Chat.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["RX_AUTHENTICATED","RX_ALL_USERS","RX_ME","RX_CONNECTED","RX_MYROOMLIST","RX_ALLROOMLIST","RX_ALLMSGLIST","RX_FOCUSMSG","RX_REMOVE","RX_FOCUSROOM","RX_LOADING1","RX_LOADING2","RX_LOADING3","RX_MSGLENGTH","RX_MSGLENGTH2","RX_TABINDEX","rx_focusmsg","result","type","rx_focusroom","rx_msglength2","rx_tabindex","initialState","authenticated","all_users","me","all_connected","myroomlist","allroomlist","allmsglist","focusmsg","focusroom","loading1","loading2","loading3","msglength","msglength2","tabindex","chats","state","action","filter","todo","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fire","fireauth","auth","firedatabase","firestore","database","connected","userUid","currentUser","uid","myConnectionsRef","ref","on","snap","val","console","log","set","connection","onDisconnect","login_maintain","member","setPersistence","Auth","Persistence","SESSION","then","signInWithEmailAndPassword","email","password","catch","error","errorCode","code","errorMessage","message","sendChat","msg","newPostKey","push","postData","timestamp","avatar","name","updates","update","alert","signIn","err","signUp","createUserWithEmailAndPassword","CM_me_connected","found","element","length","CM_my_msgLength_change","msg_key","once","snapshot","response","clone_msglength2","JSON","parse","stringify","PublicRoute","Component","component","rest","render","props","to","PrivateRoute","pathname","from","location","Copyright","Typography","variant","color","align","Button","Link","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","setMember","handleOnChange","e","target","value","handleOnSubmit","a","preventDefault","validateEmail","emailReg","RegExp","test","validateName","nameReg","validatePassword","passwordReg","Container","maxWidth","CssBaseline","className","Avatar","noValidate","onSubmit","Grid","container","item","xs","TextField","required","fullWidth","id","label","autoComplete","onChange","helperText","FormLabel","RadioGroup","aria-label","style","justifyContent","FormControlLabel","control","Radio","alt","src","Box","mt","Login","autoFocus","StyledBadge","withStyles","badge","boxShadow","background","position","top","left","height","borderRadius","animation","border","content","transform","opacity","Badge","connect","dispatch","text","sub","invisible","event","ListItem","button","onClick","ListItemAvatar","badgeContent","Object","values","undefined","hello","overlap","anchorOrigin","vertical","horizontal","ListItemText","primary","mePassword","prompt","remove","map","CM_removeRooms","root","list","overflowY","divider","title","data","loading","uid_name","names","useEffect","ListSubheader","List","CircularProgress","index","Array","isArray","emails","blue","SimpleDialog","onClose","selectedValue","open","Dialog","aria-labelledby","DialogTitle","f_add","includes","React","setOpen","setSelectedValue","lBox","textAlign","rBox","appBar","bottom","listBox","listBoxItem","listBoxItemavatar","rx_remove","intervalId","useRef","scroll","current","scrollHeight","clientHeight","scrollTo","scrollToMyRef","paddingBottom","Fragment","wordBreak","dateFns","room","removeChats","InputBox","padding","setMsg","handleSumbit","now","displayName","endIcon","flexGrow","overflow","TabPanel","children","other","role","hidden","p","a11yProps","setValue","Paper","square","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","icon","chat_wrap","rx_all_users","rx_me","rx_myroomlist","rx_allroomlist","rx_allmsglist","rx_connected","rx_loading1","rx_loading2","rx_loading3","rx_msglength","CM_connectValue","CM_all_users","some","CM_allroomlist","CM_allmsglist","msg_length","CM_msgLength","clone_response","item2","CM_my_msgLength","you","clone_data","sort","clone_allroomlist","clone_allroomlist2","CM_Roomadd","rx_authenticated","onAuthStateChanged","user","CM_login_state","path","Chat","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","logger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.08f80ec7.chunk.js","sourcesContent":["const RX_AUTHENTICATED = \"menu/RX_AUTHENTICATED\";\r\nconst RX_ALL_USERS = \"menu/RX_ALL_USERS\";\r\nconst RX_ME = \"menu/RX_ME\";\r\nconst RX_CONNECTED = \"menu/RX_CONNECTED\";\r\nconst RX_MYROOMLIST = \"menu/RX_MYROOMLIST\";\r\nconst RX_ALLROOMLIST = \"menu/RX_ALLROOMLIST\";\r\nconst RX_ALLMSGLIST = \"menu/RX_ALLMSGLIST\";\r\nconst RX_FOCUSMSG = \"menu/RX_FOCUSMSG\";\r\nconst RX_REMOVE = \"menu/RX_REMOVE\";\r\nconst RX_FOCUSROOM = \"menu/RX_FOCUSROOM\";\r\nconst RX_LOADING1 = \"menu/RX_LOADING1\";\r\nconst RX_LOADING2 = \"menu/RX_LOADING2\";\r\nconst RX_LOADING3 = \"menu/RX_LOADING3\";\r\n\r\nconst RX_MSGLENGTH = \"menu/RX_MSGLENGTH\";\r\nconst RX_MSGLENGTH2 = \"menu/RX_MSGLENGTH2\";\r\n\r\nconst RX_TABINDEX = \"menu/RX_TABINDEX\";\r\n\r\nexport const rx_authenticated = (result) => ({\r\n  type: RX_AUTHENTICATED,\r\n  result,\r\n});\r\n\r\nexport const rx_all_users = (result) => ({\r\n  type: RX_ALL_USERS,\r\n  result,\r\n});\r\n\r\nexport const rx_me = (result) => ({\r\n  type: RX_ME,\r\n  result,\r\n});\r\n\r\nexport const rx_connected = (result) => ({\r\n  type: RX_CONNECTED,\r\n  result,\r\n});\r\n\r\nexport const rx_myroomlist = (result) => ({\r\n  type: RX_MYROOMLIST,\r\n  result,\r\n});\r\n\r\nexport const rx_allroomlist = (result) => ({\r\n  type: RX_ALLROOMLIST,\r\n  result,\r\n});\r\n\r\nexport const rx_allmsglist = (result) => ({\r\n  type: RX_ALLMSGLIST,\r\n  result,\r\n});\r\n\r\nexport const rx_focusmsg = (result) => ({\r\n  type: RX_FOCUSMSG,\r\n  result,\r\n});\r\n\r\nexport const rx_remove = (key) => ({\r\n  type: RX_REMOVE,\r\n  key,\r\n});\r\n\r\nexport const rx_focusroom = (result) => ({\r\n  type: RX_FOCUSROOM,\r\n  result,\r\n});\r\n\r\nexport const rx_loading1 = (result) => ({\r\n  type: RX_LOADING1,\r\n  result,\r\n});\r\nexport const rx_loading2 = (result) => ({\r\n  type: RX_LOADING2,\r\n  result,\r\n});\r\nexport const rx_loading3 = (result) => ({\r\n  type: RX_LOADING3,\r\n  result,\r\n});\r\n\r\nexport const rx_msglength = (result) => ({\r\n  type: RX_MSGLENGTH,\r\n  result,\r\n});\r\nexport const rx_msglength2 = (result) => ({\r\n  type: RX_MSGLENGTH2,\r\n  result,\r\n});\r\n\r\nexport const rx_tabindex = (result) => ({\r\n  type: RX_TABINDEX,\r\n  result,\r\n});\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  all_users: [],\r\n  me: {},\r\n  all_connected: \"\",\r\n  myroomlist: [],\r\n  allroomlist: [],\r\n  allmsglist: [],\r\n  focusmsg: [],\r\n  focusroom: \"\",\r\n  loading1:false,\r\n  loading2:false,\r\n  loading3: false,\r\n  msglength: null,\r\n  msglength2: null,\r\n  tabindex:0\r\n};\r\n\r\nfunction chats(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RX_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: action.result,\r\n      };\r\n    case RX_ALL_USERS:\r\n      return {\r\n        ...state,\r\n        all_users: action.result,\r\n      };\r\n    case RX_ME:\r\n      return {\r\n        ...state,\r\n        me: action.result,\r\n      };\r\n    case RX_CONNECTED:\r\n      return {\r\n        ...state,\r\n        all_connected: action.result,\r\n      };\r\n    case RX_MYROOMLIST:\r\n      return {\r\n        ...state,\r\n        myroomlist: action.result,\r\n      };\r\n    case RX_ALLROOMLIST:\r\n      return {\r\n        ...state,\r\n        // item.name.push(all_users.filter((data) => data.uid === item.uid))\r\n        allroomlist: action.result,\r\n      };\r\n    case RX_ALLMSGLIST:\r\n      return {\r\n        ...state,\r\n        allmsglist: action.result,\r\n      };\r\n    case RX_FOCUSMSG:\r\n      return {\r\n        ...state,\r\n        focusmsg: action.result,\r\n      };\r\n    case RX_REMOVE:\r\n      return {\r\n        ...state,\r\n        focusmsg: state.focusmsg.filter((todo) => todo.key !== action.key),\r\n      };\r\n    case RX_FOCUSROOM:\r\n      return {\r\n        ...state,\r\n        focusroom: action.result,\r\n      };\r\n    case RX_LOADING1:\r\n      return {\r\n        ...state,\r\n        loading1: action.result,\r\n      };\r\n    case RX_LOADING2:\r\n      return {\r\n        ...state,\r\n        loading2: action.result,\r\n      };\r\n    case RX_LOADING3:\r\n      return {\r\n        ...state,\r\n        loading3: action.result,\r\n      };\r\n\r\n    case RX_MSGLENGTH:\r\n      return {\r\n        ...state,\r\n        msglength: action.result,\r\n      };\r\n    case RX_MSGLENGTH2:\r\n      return {\r\n        ...state,\r\n        msglength2: action.result,\r\n      };\r\n    \r\n    case RX_TABINDEX:\r\n      return {\r\n        ...state,\r\n        tabindex: action.result,\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default chats;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAtKM1gMUkzx8Al9G5Y6jozCsTTezqmo4M\",\r\n  authDomain: \"dongtalk-82851.firebaseapp.com\",\r\n  databaseURL: \"https://dongtalk-82851-default-rtdb.firebaseio.com\",\r\n  projectId: \"dongtalk-82851\",\r\n  storageBucket: \"dongtalk-82851.appspot.com\",\r\n  messagingSenderId: \"63820293757\",\r\n  appId: \"1:63820293757:web:1d2960afd6d6ddf589b314\",\r\n  measurementId: \"G-E7K9VBW4D0\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fire = firebase;\r\nexport const fireauth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const firedatabase = firebase.database();\r\n\r\n//const provider = new firebase.auth.GoogleAuthProvider();\r\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\r\n//provider.setCustomParameters({prompt: 'select_account'});\r\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\r\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\r\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\r\n\r\n// export default firebase;\r\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.\r\n","import { fire, fireauth, firedatabase } from \"../services/firebase\";\r\n\r\n//##########################################################\r\n//########### 로그인 여부를 판단해주는 함수(firebase) ################\r\n//##########################################################\r\nexport function CM_login_state(rx_authenticated) {\r\n  fireauth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      //로그인상태---\r\n      console.log(\"App/로그인\", user);\r\n      //#########################\r\n      connected(true);\r\n      rx_authenticated(true); //현재 로그인 여부 파악을 위한 값\r\n      //#########################\r\n    } else {\r\n      //로그아웃상태---\r\n      console.log(\"App/로그아웃\", user);\r\n      //#########################\r\n      connected(false);\r\n      rx_authenticated(false); //현재 로그인 여부 파악을 위한 값\r\n      //#########################\r\n    }\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 실시간 접속여부 관련된 함수들 ################\r\n//##########################################################\r\nexport function connected(authenticated) {\r\n  if (authenticated === true) {\r\n    var userUid = fireauth.currentUser.uid;\r\n    var myConnectionsRef = firedatabase.ref(`UsersConnection/${userUid}`);\r\n    var connectedRef = firedatabase.ref(\".info/connected\");\r\n    connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        console.log(\"connected\");\r\n        myConnectionsRef.set({\r\n          connection: true,\r\n          uid: userUid,\r\n        });\r\n      } else {\r\n        console.log(\"not connected\");\r\n        myConnectionsRef.set({\r\n          connection: false,\r\n          uid: userUid,\r\n        });\r\n      }\r\n    });\r\n    myConnectionsRef.onDisconnect().set({ connection: false, uid: userUid });\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 로그인 유지 (브라우져 닫으면 로그인 유지 풀림) ################\r\n//##########################################################\r\nexport function login_maintain(member) {\r\n  console.log(\"member\", member);\r\n  fireauth\r\n    .setPersistence(fire.auth.Auth.Persistence.SESSION)\r\n    .then(() => {\r\n      //로그인 유지 중\r\n      console.log(\"로그인 유지 중\");\r\n      return fireauth.signInWithEmailAndPassword(member.email, member.password);\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      console.log(\"로그인 유지 실패\");\r\n\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(\"errorCode\", errorCode);\r\n      console.log(\"errorMessage\", errorMessage);\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 유저 현재 접속 여부 확인을 위한 데이터 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_connectValue(rx_connected) {\r\n  //firebase 에서 connect 안의 데이터전부를 불러와서 리덕스(rx_connected)에 넣어주기\r\n  // console.log(\"fireauth.currentUser.uid\", fireauth.currentUser.uid);\r\n  firedatabase.ref(`UsersConnection`).on(\"value\", (snapshot) => {\r\n    console.log(\"sfajklas\", Object.values(snapshot.val()));\r\n    rx_connected(Object.values(snapshot.val())); //리덕스에도 넣어주기\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 유저 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_all_users(rx_all_users, rx_me, rx_loading1) {\r\n  firedatabase.ref(\"all_users\").on(\"value\", (snapshot) => {\r\n    let response = Object.values(snapshot.val());\r\n    rx_all_users(response); //리덕스에도 넣어주기\r\n    console.log(\"response\", response);\r\n\r\n    const me = response.filter((data) =>\r\n      data.uid.includes(fireauth.currentUser.uid)\r\n    );\r\n    rx_me(me); //리덕스에도 넣어주기\r\n    login_maintain(me[0]);\r\n    console.log(\"me\", me);\r\n    rx_loading1(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 전체 방 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allroomlist(rx_allroomlist, rx_myroomlist, rx_loading2) {\r\n  firedatabase.ref(\"room\").on(\"value\", (snapshot) => {\r\n    if (snapshot.val() !== null) {\r\n      let response = Object.values(snapshot.val());\r\n      console.log(\"roomListBox\", response);\r\n      rx_allroomlist(response);\r\n\r\n      const found = response.filter((element) =>\r\n        element.uid.some((item) => item === fireauth.currentUser.uid)\r\n      );\r\n      rx_myroomlist(found);\r\n      console.log(\"found\", found);\r\n    } else {\r\n      console.log(\"else\");\r\n      rx_allroomlist([]);\r\n      rx_myroomlist([]);\r\n    }\r\n    rx_loading2(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메세지 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allmsglist(rx_allmsglist, rx_loading3) {\r\n  firedatabase.ref(\"msg\").on(\"value\", (snapshot) => {\r\n    if (snapshot.val() !== null) {\r\n      let response = snapshot.val();\r\n      rx_allmsglist(response);\r\n    }\r\n    rx_loading3(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메시지 삭제(firebase) ################\r\n//##########################################################\r\nexport const removeChats = (room, key, rx_remove) => {\r\n  firedatabase.ref(`msg/${room}/${key}`).remove();\r\n  rx_remove(key); //리덕스 스토어 데이터에도 삭제된 키값을 전달해줘서 삭제시켜준다.\r\n  console.log(\"[메시지 삭제]removeChats\", room, key);\r\n}; //removeChats\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메시지 서버로 보내기(firebase) ################\r\n//##########################################################\r\nexport function sendChat(msg, focusroom) {\r\n  if (focusroom !== \"\") {\r\n    var newPostKey = firedatabase.ref(`msg/${focusroom}`).push().key;\r\n\r\n    var postData = {\r\n      message: msg.message,\r\n      timestamp: msg.timestamp,\r\n      uid: msg.uid,\r\n      avatar: msg.avatar,\r\n      key: newPostKey,\r\n      name: msg.name,\r\n    };\r\n\r\n    var updates = {};\r\n    updates[`msg/${focusroom}/${newPostKey}`] = postData;\r\n    return firedatabase.ref().update(updates);\r\n  } else {\r\n    alert(\"방을 선택해주세요\");\r\n  }\r\n} //sendChat\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 이메일 로그인 함수 ################\r\n//##########################################################\r\nexport function signIn(member) {\r\n  return fireauth\r\n    .signInWithEmailAndPassword(member.email, member.password)\r\n    .then(() => {\r\n      //dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      console.log(\"signIn()로그인성공\");\r\n    })\r\n    .catch((err) => {\r\n      //dispatch({ type: \"LOGIN_ERROR\", err });\r\n      console.log(\"signIn()실패\");\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 회원가입 함수 ################\r\n//##########################################################\r\nexport function signUp(member) {\r\n  return fireauth\r\n    .createUserWithEmailAndPassword(member.email, member.password)\r\n    .then(() => {\r\n      console.log(\"signUp()가입성공\", member.email, member.password);\r\n      // 여기는 별도 회원 데이터 저장하기 위한 기능\r\n      var newPostKey = firedatabase.ref(\"all_users\").push().key;\r\n      var postData = {\r\n        email: member.email,\r\n        name: member.name,\r\n        password: member.password,\r\n        uid: fireauth.currentUser.uid,\r\n        avatar: member.avatar,\r\n        key: newPostKey,\r\n      };\r\n      var updates = {};\r\n      updates[\"/all_users/\" + newPostKey] = postData;\r\n      return firedatabase.ref().update(updates);\r\n      // //여기는 별도 회원 데이터 저장하기 위한 기능\r\n    })\r\n    .catch((error) => {\r\n      alert(\r\n        error.message ===\r\n          \"The email address is already in use by another account.\" &&\r\n          \"이미 있는 아이디입니다.\"\r\n      );\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 로그아웃 ################\r\n//##########################################################\r\nexport function CM_logout() {\r\n  firedatabase.ref(`UsersConnection/${fireauth.currentUser.uid}`).set({\r\n    connection: false,\r\n    uid: fireauth.currentUser.uid,\r\n  });\r\n  return fireauth\r\n    .signOut()\r\n    .then(() => {\r\n      // Sign-out successful.\r\n      console.log(\"로그아웃 성공\");\r\n    })\r\n    .catch((error) => {\r\n      // An error happened.\r\n      console.log(\"로그아웃 실패\");\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 내 룸 개설 ################\r\n//##########################################################\r\nexport function CM_Roomadd(me, you, allroomlist, rx_focusroom, rx_tabindex) {\r\n  const data = [me.uid, you];\r\n  const clone_data = [me.uid, you].sort();\r\n  console.log(\"handleFriend\", data[0], data[1]);\r\n\r\n  console.log(allroomlist);\r\n  let clone_allroomlist = JSON.parse(JSON.stringify(allroomlist));\r\n  clone_allroomlist = clone_allroomlist.some(\r\n    (element) =>\r\n      JSON.stringify(element.uid.sort()) === JSON.stringify(clone_data)\r\n  );\r\n\r\n  rx_tabindex(2);\r\n  if (!clone_allroomlist) {\r\n    //방이 없는경우 새방을 만들어준다.\r\n    var newPostKey = firedatabase.ref(\"room\").push().key;\r\n    rx_focusroom(newPostKey);\r\n    var postData = {\r\n      uid: [me.uid, you],\r\n      name: [],\r\n      avatar: me.avatar,\r\n      msg_key: newPostKey,\r\n    };\r\n    var updates = {};\r\n    updates[\"/room/\" + newPostKey] = postData;\r\n    return firedatabase.ref().update(updates);\r\n  } else {\r\n    //이미 방이 있는경우 포커스룸만 현재꺼로 채워준다.\r\n    let clone_allroomlist2 = JSON.parse(JSON.stringify(allroomlist));\r\n    clone_allroomlist2 = clone_allroomlist2.filter(\r\n      (item) => JSON.stringify(item.uid.sort()) === JSON.stringify(clone_data)\r\n    )[0].msg_key;\r\n\r\n    console.log(\"이미 방이 있습니다. 현재룸\", clone_allroomlist2);\r\n    rx_focusroom(clone_allroomlist2);\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 내 룸 리스트 삭제 ################\r\n//##########################################################\r\nexport const CM_removeRooms = (\r\n  key,\r\n  me,\r\n  rx_focusroom,\r\n  rx_focusmsg,\r\n  all_users\r\n) => {\r\n  var mePassword = prompt(\"본인의 비밀번호를 입력하세요\");\r\n  if (me.password === mePassword) {\r\n    firedatabase.ref(`room/${key}`).remove();\r\n    firedatabase.ref(`msg/${key}`).remove();\r\n    firedatabase.ref(`msgLength/${key}`).remove();\r\n    all_users.map((item) =>\r\n      firedatabase.ref(`msgLength2/${item.uid}/${key}`).remove()\r\n    );\r\n\r\n    rx_focusroom(\"\");\r\n    rx_focusmsg([]);\r\n    alert(\"삭제가 완료되었습니다.\");\r\n  } else {\r\n    alert(\"비밀번호가 틀려서 삭제 불가합니다\");\r\n  }\r\n};\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 실시간 접속 여부를 화면단에 뿌려줄때 사용 ################\r\n//##########################################################\r\nexport function CM_me_connected(all_connected, uid) {\r\n  //실제 화면단 포문 도는곳에\r\n  //all_connected:리덕스의 all_connected 를 넣어주고\r\n  //uid:리덕의 all_users가 포문 돌면서 하나하나 접근할때 있는 uid값\r\n  if (all_connected !== \"\") {\r\n    // console.log(\"######################################\");\r\n    // console.log(\"all_connected\", all_connected);\r\n    // console.log(\"uid\", uid);\r\n    const found = all_connected.filter((element) => element.uid === uid);\r\n    // console.log(\r\n    //   \"foundfoundfoundfoundfoundfoundfoundfoundfoundfoundfoundfound\",\r\n    //   found\r\n    // );\r\n    return found.length > 0 && found[0].connection;\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//구글 로그인 기능(사용안함 중)\r\nexport function signInWithGoogle() {\r\n  const provider = new fire.auth.GoogleAuthProvider();\r\n  // provider.setCustomParameters({ prompt: 'select_account' });\r\n  return fireauth.signInWithPopup(provider);\r\n}\r\n\r\n//##########################################################\r\n//########### 룸 갯수만큼 포문돌려서 각룸 몇개의 메시지인지 초기에 확인하는 기능 ################\r\n//##########################################################\r\nexport function CM_msgLength(allmsglist, allroomlist, rx_msglength) {\r\n  console.log(\"CM_msgLength\");\r\n\r\n  //룸 갯수만큼 포문돌려서 데이터를 객체로 만들어준다.\r\n  let msg_length = {};\r\n  allroomlist.map((item, index) => {\r\n    return (msg_length[item.msg_key] = allmsglist[item.msg_key]\r\n      ? Object.values(allmsglist[item.msg_key]).length\r\n      : 0);\r\n  });\r\n  //위에서 만든 데이터를 firedatabase 에 보내 서버에 저장해준다.\r\n  firedatabase.ref(`msgLength/`).set(msg_length, (error) => {\r\n    if (error) {\r\n      // The write failed...\r\n      console.log(\"The write failed...\");\r\n    } else {\r\n      // Data saved successfully!\r\n      console.log(\"Data saved successfully!\");\r\n      //리덕스에도 넣어주기\r\n      rx_msglength(msg_length);\r\n    }\r\n  });\r\n}\r\n\r\n//##########################################################\r\n//########### 또다른 룸갯수 확인(확인전까진 위의 기능보다 낮은 숫자이다가 확인하는순간 위의기능 숫자와 동일하게 만들어줌) ################\r\n//##########################################################\r\nexport function CM_my_msgLength(allroomlist, rx_msglength2, all_users) {\r\n  console.log(\"CM_my_msgLength 실행\");\r\n  //allroomlist=룸리스트데이터\r\n  //rx_msglength2=\r\n  //all_users=전체 회원 데이터\r\n\r\n  firedatabase\r\n    .ref(`My_msgLength2`)\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      let response = snapshot.val();\r\n      if (response) {\r\n        let clone_response = JSON.parse(JSON.stringify(response));\r\n        all_users.map((item) =>\r\n          allroomlist.map(\r\n            (item2) =>\r\n              !response[item.uid][item2.msg_key] &&\r\n              (clone_response[item.uid][item2.msg_key] = 0)\r\n          )\r\n        );\r\n\r\n        firedatabase.ref(`My_msgLength2/`).set(clone_response);\r\n\r\n        // all_users.map((item) =>\r\n        //   allroomlist.map(\r\n        //     (item2,index) =>\r\n        //       !response[item.uid][item2.msg_key] &&\r\n        //       firedatabase\r\n        //         .ref(`My_msgLength2/${item.uid}/${item2.msg_key}`)\r\n        //         .set(index)\r\n        //   )\r\n        // );\r\n      } else {\r\n        all_users.map((item) =>\r\n          allroomlist.map((item2) =>\r\n            firedatabase\r\n              .ref(`My_msgLength2/${item.uid}`)\r\n              .update({ [item2.msg_key]: 0 })\r\n          )\r\n        );\r\n      }\r\n\r\n      firedatabase\r\n        .ref(`My_msgLength2`)\r\n        .once(\"value\")\r\n        .then((snapshot) => {\r\n          let response = snapshot.val();\r\n\r\n          rx_msglength2(response);\r\n        });\r\n    });\r\n}\r\n\r\nexport function CM_my_msgLength_change(\r\n  msg_key,\r\n  rx_msglength2,\r\n  msglength2,\r\n  rx_tabindex\r\n) {\r\n  if (msg_key) {\r\n    console.log(\"CM_my_msgLength_change\");\r\n    console.log(\"uid\", fireauth.currentUser.uid);\r\n    console.log(\"msg_key\", msg_key);\r\n    // console.log(\"msglength2msglength2\", msglength2['2K13LFWW5kNaThUcjkSjPZKgVKp2']['-Mhn_j1VPLJpmkd1sSc_'] = 10);\r\n    // console.log(\"msglength2msglength2\", msglength2);\r\n\r\n    firedatabase\r\n      .ref(`msgLength/${msg_key}`)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        let response = snapshot.val();\r\n        console.log(response);\r\n        firedatabase\r\n          .ref(`My_msgLength2/${fireauth.currentUser.uid}/${msg_key}`)\r\n          .set(response, (error) => {\r\n            if (error) {\r\n              // The write failed...\r\n              console.log(\"The write failed...\");\r\n            } else {\r\n              // Data saved successfully!\r\n              console.log(\"Data saved successfully!\");\r\n              //리덕스에도 넣어주기\r\n              let clone_msglength2 = JSON.parse(JSON.stringify(msglength2));\r\n              clone_msglength2[fireauth.currentUser.uid][msg_key] = response;\r\n              console.log(clone_msglength2);\r\n              rx_msglength2(clone_msglength2);\r\n              rx_tabindex && rx_tabindex(2);\r\n            }\r\n          });\r\n\r\n        //         firedatabase\r\n        //           .ref(`My_msgLength2`)\r\n        //           .once(\"value\")\r\n        //           .then((snapshot) => {\r\n        //             let response = snapshot.val();\r\n        // console.log('My_msgLength2My_msgLength2My_msgLength2',response)\r\n        //             //rx_msglength2(response);\r\n        //           });\r\n      });\r\n  }\r\n}\r\n//##########################################################\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === false ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/chat\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signUp } from \"../helpers/common\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n  const [member, setMember] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    avatar:\"\",\r\n  });\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMember({ ...member, [name]: value });\r\n  };\r\nconsole.log(member)\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (member.email !== \"\" && member.password !== \"\" && member.name !== \"\") {\r\n      signUp(member);\r\n    }\r\n  };\r\n\r\nfunction validateEmail(email){\r\n    var emailReg = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n  return email.length > 0 ? emailReg.test(email) : true;\r\n}\r\nfunction validateName(name){\r\n    var nameReg = new RegExp(/[ㄱ-ㅎㅏ-ㅣ가-힣]/g);\r\n  return name.length > 0 ? nameReg.test(name) : true;\r\n}\r\nfunction validatePassword(password){\r\n    var passwordReg = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/);\r\n  return password.length > 0 ? passwordReg.test(password) : true;\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          회원 가입\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={member.email}\r\n                onChange={handleOnChange}\r\n                error={!validateEmail(member.email)}\r\n                helperText={ !validateEmail(member.email) && 'emali 형식에 맞게 입력해주세요.' }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                value={member.name}\r\n                onChange={handleOnChange}\r\n                error={!validateName(member.name)}\r\n                helperText={ !validateName(member.name) && '한글만 입력해주세요.' }\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={member.password}\r\n                onChange={handleOnChange}\r\n                error={!validatePassword(member.password)}\r\n                helperText={!validatePassword(member.password) && 'password는 최소 8 자, 최소 하나의 문자 및 하나의 숫자' }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div>\r\n                <FormLabel component=\"legend\">Avatar</FormLabel>\r\n                <RadioGroup aria-label=\"gender\" name=\"avatar\" value={member.avatar} onChange={handleOnChange} style={{ display:'flex',flexDirection:'row',justifyContent:'center' }}>\r\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/1.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />} />\r\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/2.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/2.jpg\" />} />\r\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/3.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/3.jpg\" />} />\r\n                </RadioGroup>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            가입하기\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              이미 회원이신가?{\" \"}\r\n              <Button component={Link} to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { signIn } from \"../helpers/common\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  CssBaseline,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const [member, setMember] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMember({ ...member, [name]: value });\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (member.email !== \"\" && member.password !== \"\") {\r\n      signIn(member);\r\n    }\r\n  };\r\n\r\nfunction validateEmail(email){\r\n    var emailReg = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n  return email.length > 0 ? emailReg.test(email) : true;\r\n}\r\n// function validatePassword(password){\r\n//     var passwordReg = new RegExp(\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\");\r\n//   return password.length > 0 ? passwordReg.test(password) : true;\r\n// }\r\n\r\n\r\n  // const handleGoogleSignIn = async () => {\r\n  //   try {\r\n  //     await signInWithGoogle();\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleOnSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"이메일을 입력하세요.\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={member.email}\r\n            onChange={handleOnChange}\r\n            error={!validateEmail(member.email)}\r\n            helperText={ !validateEmail(member.email) && 'emali 제대로 입력해주세요.' }\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={member.password}\r\n            onChange={handleOnChange}\r\n            error={false}\r\n            helperText={false && 'password는 최소 8 자, 최소 하나의 문자 및 하나의 숫자' }\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleGoogleSignIn}\r\n            className={classes.submit}\r\n          >\r\n            구글 로그인\r\n          </Button> */}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              {/* <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link> */}\r\n            </Grid>\r\n            <Grid item>\r\n              <Button component={Link} to=\"/signup\">\r\n                {\"회원가입\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { CM_removeRooms } from \"../helpers/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { fireauth } from \"../services/firebase\";\r\n\r\nimport { rx_focusroom, rx_focusmsg } from \"../modules/chats\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst FriendItem = ({\r\n  text,\r\n  sub,\r\n  uid,\r\n  avatar,\r\n  msg_key,\r\n  me,\r\n  invisible,\r\n  event,\r\n  rx_focusroom,\r\n  rx_focusmsg,\r\n  all_users,\r\n  msglength,\r\n  msglength2,\r\n}) => {\r\n  const hello = (msg_key) => {\r\n    if (msglength && msglength2) {\r\n      //console.log('갯수구하기0',msg_key)\r\n      if (\r\n        Object.values(msglength).length ===\r\n        Object.values(msglength2[fireauth.currentUser.uid]).length\r\n      ) {\r\n        if (\r\n          msglength[msg_key] !== undefined &&\r\n          msglength2[fireauth.currentUser.uid][msg_key] !== undefined\r\n        ) {\r\n          console.log(\"갯수구하기\", msglength[msg_key] && msglength[msg_key]);\r\n          console.log(\r\n            \"갯수구하기2\",\r\n            msglength2[fireauth.currentUser.uid][msg_key] &&\r\n              msglength2[fireauth.currentUser.uid][msg_key]\r\n          );\r\n          return (\r\n            msglength &&\r\n            msglength2 &&\r\n            msglength[msg_key] - msglength2[fireauth.currentUser.uid][msg_key]\r\n          );\r\n        }\r\n\r\n        //return msglength && msglength2 && msglength[msg_key] - msglength2[fireauth.currentUser.uid][msg_key];\r\n      }\r\n\r\n      //   console.log('갯수구하기', msglength[msg_key])\r\n      // console.log('갯수구하기2',msglength2[fireauth.currentUser.uid][msg_key])\r\n    }\r\n    //return msglength && msglength2 && msglength[msg_key] - msglength2[fireauth.currentUser.uid][msg_key];\r\n  };\r\n\r\n  return (\r\n    <li style={{ display: msg_key ? \"flex\" : \"block\" }}>\r\n      <ListItem button onClick={() => (msg_key ? event(msg_key) : event(uid))}>\r\n        <ListItemAvatar>\r\n          <Badge color=\"secondary\" badgeContent={msg_key ? hello(msg_key) : 0}>\r\n            <StyledBadge\r\n              invisible={invisible}\r\n              overlap=\"circular\"\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n              }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt=\"Remy Sharp\" src={avatar} />\r\n            </StyledBadge>\r\n          </Badge>\r\n          {/* <Avatar>\r\n                  <BeachAccessIcon />\r\n                </Avatar> */}\r\n        </ListItemAvatar>\r\n        <ListItemText primary={text} secondary={sub} />\r\n      </ListItem>\r\n      {msg_key && (\r\n        <Button\r\n          onClick={() =>\r\n            CM_removeRooms(msg_key, me, rx_focusroom, rx_focusmsg, all_users)\r\n          }\r\n        >\r\n          삭제\r\n        </Button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  msglength: state.chats.msglength,\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendItem);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FriendItem from \"./FriendItem\";\r\n\r\nimport { Box, List, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport { CM_me_connected } from \"../helpers/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  list: {\r\n    height: \"456px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  divider: {\r\n    // margin: '20px 0',\r\n  },\r\n}));\r\n\r\nconst FriendList = ({\r\n  title,\r\n  data,\r\n  event,\r\n  all_users,\r\n  all_connected,\r\n  me,\r\n  loading,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function uid_name(names) {\r\n    return (\r\n      names !== undefined &&\r\n      all_users.length > 0 &&\r\n      all_users.filter((data) => data.uid === names)[0].name\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]FriendList.js\");\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <ListSubheader>{title}</ListSubheader>\r\n\r\n      <List className={classes.list}>\r\n        {loading && (\r\n          <Box\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress color=\"secondary\" />\r\n          </Box>\r\n        )}\r\n\r\n        {data.length > 0 ? (\r\n          data.map((data, index) => (\r\n            <FriendItem\r\n              key={index}\r\n              invisible={!CM_me_connected(all_connected, data.uid)}\r\n              text={\r\n                Array.isArray(data.uid)\r\n                  ? data.uid.map((item, index) =>\r\n                      index > 0 ? `/${uid_name(item)}` : uid_name(item)\r\n                    )\r\n                  : uid_name(data.uid)\r\n              }\r\n              sub={data.email === undefined ? \"1:1 대화방\" : data.email}\r\n              uid={data.uid}\r\n              avatar={data.avatar}\r\n              msg_key={data.msg_key}\r\n              me={me}\r\n              event={event}\r\n            />\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n\r\n      {/* <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n          </List>\r\n          \r\n          <Divider className={classes.divider} />\r\n          <ListSubheader>나의 방 리스트</ListSubheader>\r\n          <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n          </List> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  all_connected: state.chats.all_connected,\r\n  me: state.chats.me[0],\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   rx_focusroom: (val) => {\r\n//     dispatch(rx_focusroom(val));\r\n//   },\r\n// });\r\n\r\nexport default connect(mapStateToProps, null)(FriendList);\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { firedatabase } from \"../services/firebase\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open, data, focusroom } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n    console.log(\"까르르르궁\", data);\r\n  };\r\n\r\n  const handleListItemClick = (uid) => {\r\n    firedatabase\r\n      .ref(`room/${focusroom}/uid`)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        const f_add = snapshot.val();\r\n\r\n        if (!f_add.includes(uid)) {\r\n          //중복 친구가 없는경우 추가\r\n          f_add.push(uid);\r\n          firedatabase\r\n            .ref(`room/${focusroom}`)\r\n            .update({\r\n              uid: f_add,\r\n            })\r\n            .then(() => {\r\n              console.log(\"친추 완료\", f_add);\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"친추 실패\");\r\n            });\r\n        } else {\r\n          //중복 친구가 있는경우 알럿 노출\r\n          alert(\"이미 추가된 친구입니다.\");\r\n        }\r\n      });\r\n    onClose(false);\r\n  };\r\n\r\n  console.log(\"까르르르궁\", data);\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">친구 리스트</DialogTitle>\r\n      <List>\r\n        {data.length > 0 ? (\r\n          data.map((item, index) => (\r\n            <ListItem\r\n              button\r\n              onClick={() => handleListItemClick(item.uid)}\r\n              key={index}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar className={classes.avatar}>\r\n                  <PersonIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={item.name} />\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n// SimpleDialog.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n//   open: PropTypes.bool.isRequired,\r\n//   selectedValue: PropTypes.string.isRequired,\r\n// };\r\n\r\nconst FriendAdd = ({ all_users, focusroom }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        친구추가\r\n      </Button>\r\n      <SimpleDialog\r\n        data={all_users}\r\n        focusroom={focusroom}\r\n        selectedValue={selectedValue}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  // myroomlist: state.chats.myroomlist,\r\n  // allroomlist: state.chats.allroomlist,\r\n  // me: state.chats.me[0],\r\n  focusroom: state.chats.focusroom,\r\n});\r\n\r\n//   const mapDispatchToProps = (dispatch) => ({\r\n//     rx_all_users: (val) => {\r\n//       dispatch(rx_all_users(val));\r\n//     },\r\n//     rx_me: (val) => {\r\n//       dispatch(rx_me(val));\r\n//     },\r\n//     rx_myroomlist: (val) => {\r\n//       dispatch(rx_myroomlist(val));\r\n//     },\r\n//     rx_allroomlist: (val) => {\r\n//       dispatch(rx_allroomlist(val));\r\n//     },\r\n//     rx_focusroom: (val) => {\r\n//       dispatch(rx_focusroom(val));\r\n//     },\r\n//     rx_msglist: (val) => {\r\n//       dispatch(rx_msglist(val));\r\n//     },\r\n//   });\r\n\r\nexport default connect(mapStateToProps, null)(FriendAdd);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { rx_remove } from \"../modules/chats\";\r\nimport { fireauth } from \"../services/firebase\";\r\n\r\nimport * as dateFns from \"date-fns\";\r\nimport { removeChats } from \"../helpers/common\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport FriendAdd from \"./FriendAdd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  lBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  rBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    \"& input,& button\": {\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n    },\r\n  },\r\n\r\n  listBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  listBoxItem: {\r\n    display: \"block\",\r\n  },\r\n  listBoxItemavatar: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst Message = ({ focusmsg, focusroom, rx_remove, loading }) => {\r\n  const classes = useStyles();\r\n  console.log(\"Message-focusroom\", focusroom);\r\n  const intervalId = useRef(null);\r\n\r\n  function scrollToMyRef() {\r\n    const scroll =\r\n      intervalId.current.scrollHeight - intervalId.current.clientHeight;\r\n    intervalId.current.scrollTo(0, scroll);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Message.js\");\r\n    scrollToMyRef();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [focusmsg, focusroom]);\r\n\r\n  return (\r\n    <Box\r\n      style={{ height: \"420px\", overflowY: \"scroll\", paddingBottom: \"15%\" }}\r\n      ref={intervalId}\r\n    >\r\n      {loading && (\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      )}\r\n      <ListSubheader\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        채팅방\r\n        {focusroom !== \"\" && <FriendAdd />}\r\n      </ListSubheader>\r\n      <List className={classes.listBox}>\r\n        {focusmsg.length > 0 ? (\r\n          focusmsg.map((data, index) => (\r\n            <ListItem key={index} className={classes.listBoxItem}>\r\n              <Box\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection:\r\n                    fireauth.currentUser.uid === data.uid\r\n                      ? \"row-reverse\"\r\n                      : \"row\",\r\n                  textAlign:\r\n                    fireauth.currentUser.uid === data.uid ? \"right\" : \"left\",\r\n                }}\r\n              >\r\n                <ListItemAvatar\r\n                  className={classes.listBoxItemavatar}\r\n                  style={{\r\n                    justifyContent:\r\n                      fireauth.currentUser.uid === data.uid\r\n                        ? \"flex-end\"\r\n                        : \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Avatar alt=\"Remy Sharp\" src={data.avatar} />\r\n                </ListItemAvatar>\r\n\r\n                <ListItemText\r\n                  primary={data.name}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        color=\"textPrimary\"\r\n                        style={{ wordBreak: \"break-all\" }}\r\n                      >\r\n                        {data.message}\r\n                      </Typography>\r\n                      <br />\r\n                      {dateFns.format(data.timestamp, \"yyyy-MM-dd-HH-mm-ss\")}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n                <Button\r\n                  style={{\r\n                    display:\r\n                      fireauth.currentUser.uid !== data.uid\r\n                        ? \"none\"\r\n                        : \"inline-flex\",\r\n                  }}\r\n                  onClick={() => removeChats(focusroom, data.key, rx_remove)}\r\n                >\r\n                  삭제\r\n                </Button>\r\n              </Box>\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_remove: (val) => {\r\n    dispatch(rx_remove(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fireauth } from \"../services/firebase\";\r\nimport { sendChat, CM_my_msgLength_change } from \"../helpers/common\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Box, Button, TextField } from \"@material-ui/core\";\r\n\r\nimport { rx_msglength2 } from \"../modules/chats\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  InputBox: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    position: \"absolute\",\r\n    bottom: \"70px\",\r\n    left: '0',\r\n    width: \"96%\",\r\n    margin: \"2%\",\r\n    padding: \"2%\",\r\n    boxShadow: \"1px 1px 5px #a0a0a0\",\r\n    borderRadius: \"5px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InputBox = ({ focusroom, me, rx_msglength2, msglength2 }) => {\r\n  const classes = useStyles();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    sendChat(\r\n      {\r\n        message: msg,\r\n        timestamp: Date.now(),\r\n        uid: fireauth.currentUser.uid,\r\n        avatar: me.avatar,\r\n        name:\r\n          fireauth.currentUser.displayName === null\r\n            ? me.name\r\n            : fireauth.currentUser.displayName,\r\n      },\r\n      focusroom\r\n    );\r\n    CM_my_msgLength_change(focusroom, rx_msglength2, msglength2);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumbit}>\r\n      <Box className={classes.InputBox}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"메시지\"\r\n          value={msg}\r\n          onChange={handleOnChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          endIcon={<SendIcon />}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n  me: state.chats.me[0],\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_msglength2: (val) => {\r\n    dispatch(rx_msglength2(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputBox);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { rx_tabindex } from \"../modules/chats\";\r\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 500,\r\n    height: 600,\r\n    margin: \"0 auto\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-prevent-tab-${index}`,\r\n    \"aria-controls\": `scrollable-prevent-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst TabBox = ({ content, rx_tabindex, tabindex }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    rx_tabindex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]TabBox.js\", tabindex);\r\n    setValue(tabindex);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabindex]);\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <TabPanel value={value} index={0}>\r\n        {content[0]}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {content[1]}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        {content[2]}\r\n      </TabPanel>\r\n\r\n      <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          aria-label=\"icon label tabs example\"\r\n        >\r\n          <Tab icon={<PersonIcon />} label=\"친구\" {...a11yProps(0)} />\r\n          <Tab icon={<ViewColumnIcon />} label=\"방리스트\" {...a11yProps(1)} />\r\n          <Tab icon={<QuestionAnswerIcon />} label=\"채팅\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tabindex: state.chats.tabindex,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_tabindex: (val) => {\r\n    dispatch(rx_tabindex(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabBox);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CM_all_users,\r\n  CM_allroomlist,\r\n  CM_allmsglist,\r\n  CM_Roomadd,\r\n  login_maintain,\r\n  CM_connectValue,\r\n  CM_msgLength,\r\n  CM_my_msgLength,\r\n  CM_my_msgLength_change,\r\n} from \"../helpers/common\";\r\n\r\nimport {\r\n  rx_all_users,\r\n  rx_me,\r\n  rx_myroomlist,\r\n  rx_allroomlist,\r\n  rx_focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  rx_focusmsg,\r\n  rx_loading1,\r\n  rx_loading2,\r\n  rx_loading3,\r\n  rx_msglength,\r\n  rx_msglength2,\r\n  rx_tabindex,\r\n} from \"../modules/chats\";\r\n\r\nimport {\r\n  CssBaseline,\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport FriendList from \"../components/FriendList\";\r\nimport Message from \"../components/Message\";\r\nimport InputBox from \"../components/InputBox\";\r\nimport TabBox from \"../components/TabBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //height:'450px'\r\n  },\r\n  chat_wrap: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"577px\",\r\n  },\r\n}));\r\n\r\nconst Chat = ({\r\n  rx_all_users,\r\n  all_users,\r\n  rx_me,\r\n  me,\r\n  rx_myroomlist,\r\n  myroomlist,\r\n  rx_allroomlist,\r\n  allroomlist,\r\n  rx_focusroom,\r\n  focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  allmsglist,\r\n  rx_focusmsg,\r\n  focusmsg,\r\n  rx_loading1,\r\n  rx_loading2,\r\n  rx_loading3,\r\n  loading1,\r\n  loading2,\r\n  loading3,\r\n  rx_msglength,\r\n  rx_msglength2,\r\n  msglength,\r\n  msglength2,\r\n  rx_tabindex,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleFriend = (you) => {\r\n    CM_Roomadd(me, you, allroomlist, rx_focusroom, rx_tabindex);\r\n  };\r\n\r\n  const handleRoom = (msg_key) => {\r\n    console.log(\"handleRoom\");\r\n    rx_focusroom(msg_key);\r\n    CM_my_msgLength_change(msg_key, rx_msglength2, msglength2, rx_tabindex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Chat.js\");\r\n    CM_connectValue(rx_connected);\r\n    rx_loading1(true);\r\n    rx_loading2(true);\r\n    rx_loading3(true);\r\n    CM_all_users(rx_all_users, rx_me, rx_loading1);\r\n    CM_allroomlist(rx_allroomlist, rx_myroomlist, rx_loading2);\r\n    CM_allmsglist(rx_allmsglist, rx_loading3);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    allmsglist[focusroom]\r\n      ? rx_focusmsg(Object.values(allmsglist[focusroom]))\r\n      : rx_focusmsg([]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allmsglist, focusroom]);\r\n\r\n  useEffect(() => {\r\n    if (allroomlist.length > 0) {\r\n      CM_msgLength(allmsglist, allroomlist, rx_msglength);\r\n      console.log(\"초기 메시지 갯수 세팅\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allroomlist, allmsglist]);\r\n\r\n  useEffect(() => {\r\n    if (allroomlist.length > 0) {\r\n      CM_my_msgLength(allroomlist, rx_msglength2, all_users);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allroomlist]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      {/* <Container maxWidth=\"md\" className={classes.root}>\r\n        <Paper className={classes.chat_wrap} elevation={1}>\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={12} sm={4} className={classes.sectionDesktop}>\r\n              <FriendList\r\n                title=\"전체 친구 리스트\"\r\n                data={all_users}\r\n                loading={loading1}\r\n                event={handleFriend}\r\n              />\r\n              <Divider />\r\n              <FriendList\r\n                title=\"나의 방 리스트\"\r\n                data={myroomlist}\r\n                loading={loading2}\r\n                event={handleRoom}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} style={{ position: \"relative\" }}>\r\n              <Message focusmsg={focusmsg} loading={loading3} />\r\n              <InputBox />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Container> */}\r\n      <TabBox\r\n        content={[\r\n          <FriendList\r\n            title=\"전체 친구 리스트\"\r\n            data={all_users}\r\n            loading={loading1}\r\n            event={handleFriend}\r\n          />,\r\n          <FriendList\r\n            title=\"나의 방 리스트\"\r\n            data={myroomlist}\r\n            loading={loading2}\r\n            event={handleRoom}\r\n          />,\r\n          <>\r\n            <Message focusmsg={focusmsg} loading={loading3} />\r\n            <InputBox />\r\n          </>,\r\n        ]}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nChat.propTypes = {\r\n  rx_all_users: PropTypes.func,\r\n  all_users: PropTypes.array,\r\n  rx_me: PropTypes.func,\r\n  me: PropTypes.object,\r\n  rx_myroomlist: PropTypes.func,\r\n  myroomlist: PropTypes.array,\r\n  rx_allroomlist: PropTypes.func,\r\n  allroomlist: PropTypes.array,\r\n  rx_focusroom: PropTypes.func,\r\n  focusroom: PropTypes.string,\r\n  rx_allmsglist: PropTypes.func,\r\n  rx_connected: PropTypes.func,\r\n  allmsglist: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  rx_focusmsg: PropTypes.func,\r\n  focusmsg: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  myroomlist: state.chats.myroomlist,\r\n  allroomlist: state.chats.allroomlist,\r\n  me: state.chats.me[0],\r\n  focusroom: state.chats.focusroom,\r\n  allmsglist: state.chats.allmsglist,\r\n  focusmsg: state.chats.focusmsg,\r\n  loading1: state.chats.loading1,\r\n  loading2: state.chats.loading2,\r\n  loading3: state.chats.loading3,\r\n  msglength: state.chats.msglength,\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_all_users: (val) => {\r\n    dispatch(rx_all_users(val));\r\n  },\r\n  rx_me: (val) => {\r\n    dispatch(rx_me(val));\r\n  },\r\n  rx_myroomlist: (val) => {\r\n    dispatch(rx_myroomlist(val));\r\n  },\r\n  rx_allroomlist: (val) => {\r\n    dispatch(rx_allroomlist(val));\r\n  },\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_allmsglist: (val) => {\r\n    dispatch(rx_allmsglist(val));\r\n  },\r\n  rx_connected: (val) => {\r\n    dispatch(rx_connected(val));\r\n  },\r\n  login_maintain: (val) => {\r\n    dispatch(login_maintain(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  },\r\n  rx_loading1: (val) => {\r\n    dispatch(rx_loading1(val));\r\n  },\r\n  rx_loading2: (val) => {\r\n    dispatch(rx_loading2(val));\r\n  },\r\n  rx_loading3: (val) => {\r\n    dispatch(rx_loading3(val));\r\n  },\r\n  rx_msglength: (val) => {\r\n    dispatch(rx_msglength(val));\r\n  },\r\n  rx_msglength2: (val) => {\r\n    dispatch(rx_msglength2(val));\r\n  },\r\n  rx_tabindex: (val) => {\r\n    dispatch(rx_tabindex(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { HashRouter, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { rx_authenticated } from \"./modules/chats\";\r\nimport { CM_logout } from \"./helpers/common\";\r\nimport { CM_login_state } from \"./helpers/common\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PublicRoute from \"./components/PublicRoute\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport SignUp from \"./containers/SignUp\";\r\nimport Login from \"./containers/Login\";\r\nimport Chat from \"./containers/Chat\";\r\n\r\nfunction App({ rx_authenticated, authenticated, me }) {\r\n  useEffect(() => {\r\n    console.log(\"[표시]App.js\");\r\n    CM_login_state(rx_authenticated);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <PrivateRoute\r\n          path=\"/chat\"\r\n          authenticated={authenticated}\r\n          component={Chat}\r\n        />\r\n        <PublicRoute\r\n          path=\"/signup\"\r\n          authenticated={authenticated}\r\n          component={SignUp}\r\n        />\r\n        <PublicRoute\r\n          path={[\"/\", \"/login\"]}\r\n          authenticated={authenticated}\r\n          component={Login}\r\n        />\r\n      </Switch>\r\n      {authenticated &&\r\n        <Button variant=\"contained\"\r\n          style={{ display:'flex' , width: '200px', height: '50px', margin:'50px auto 0 auto' }}\r\n          onClick={() => {\r\n            CM_logout();\r\n          }}>로그아웃({ me && me.name })</Button>\r\n      }\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\n\r\nApp.propTypes = {\r\n  rx_authenticated: PropTypes.func,\r\n  authenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.chats.authenticated,\r\n  me: state.chats.me[0],\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_authenticated: (val) => {\r\n    dispatch(rx_authenticated(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport chats from \"./chats\";\r\n// import auth from \"./auth\";\r\n\r\nconst rootReducer = combineReducers({\r\n  chats,\r\n  // auth,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport rootReducer from \"./modules\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nconst logger = createLogger();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}