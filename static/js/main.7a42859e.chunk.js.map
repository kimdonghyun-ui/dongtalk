{"version":3,"sources":["modules/chats.js","services/firebase.js","helpers/common.js","components/PublicRoute.js","components/PrivateRoute.js","containers/SignUp.js","containers/Login.js","components/FriendItem.js","components/FriendList.js","components/FriendAdd.js","components/Message.js","components/InputBox.js","components/TabBox.js","containers/Chat.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["RX_AUTHENTICATED","RX_ALL_USERS","RX_ME","RX_CONNECTED","RX_MYROOMLIST","RX_ALLROOMLIST","RX_ALLMSGLIST","RX_FOCUSMSG","RX_REMOVE","RX_FOCUSROOM","RX_LOADING1","RX_LOADING2","RX_LOADING3","RX_MSGLENGTH","RX_MSGLENGTH2","RX_ALL_MY_MSGLENGTH","RX_TABINDEX","rx_focusmsg","result","type","rx_focusroom","rx_msglength2","rx_tabindex","initialState","authenticated","all_users","me","all_connected","myroomlist","allroomlist","allmsglist","focusmsg","focusroom","loading1","loading2","loading3","msglength","msglength2","all_my_msglength","tabindex","chats","state","action","filter","todo","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fire","fireauth","auth","firedatabase","firestore","database","connected","userUid","currentUser","uid","myConnectionsRef","ref","on","snap","val","console","log","set","connection","onDisconnect","login_maintain","member","setPersistence","Auth","Persistence","SESSION","then","signInWithEmailAndPassword","email","password","catch","error","errorCode","code","errorMessage","message","sendChat","msg","newPostKey","push","postData","timestamp","avatar","name","updates","update","alert","signIn","err","signUp","createUserWithEmailAndPassword","CM_logout","signOut","CM_me_connected","found","element","length","CM_my_msgLength_change","msg_key","once","snapshot","response","clone_msglength2","JSON","parse","stringify","PublicRoute","Component","component","rest","render","props","to","PrivateRoute","pathname","from","location","Copyright","Typography","variant","color","align","Button","Link","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","setMember","handleOnChange","e","target","value","handleOnSubmit","a","preventDefault","validateEmail","emailReg","RegExp","test","validateName","nameReg","validatePassword","passwordReg","Container","maxWidth","CssBaseline","className","Avatar","noValidate","onSubmit","Grid","container","item","xs","TextField","required","fullWidth","id","label","autoComplete","onChange","helperText","FormLabel","RadioGroup","aria-label","style","justifyContent","FormControlLabel","control","Radio","alt","src","Box","mt","Login","autoFocus","StyledBadge","withStyles","badge","boxShadow","background","position","top","left","height","borderRadius","animation","border","content","transform","opacity","Badge","connect","dispatch","text","sub","invisible","event","ListItem","button","onClick","ListItemAvatar","badgeContent","Object","values","undefined","hello","overlap","anchorOrigin","vertical","horizontal","ListItemText","primary","mePassword","prompt","remove","map","CM_removeRooms","root","paddingTop","list","bottom","right","overflowY","divider","title","padding","fontSize","fontWeight","data","loading","uid_name","names","useEffect","ListSubheader","List","CircularProgress","index","Array","isArray","emails","blue","SimpleDialog","onClose","selectedValue","open","Dialog","aria-labelledby","DialogTitle","f_add","includes","React","setOpen","setSelectedValue","lBox","textAlign","rBox","appBar","listBox","listBoxItem","listBoxItemavatar","rx_remove","intervalId","useRef","scroll","current","scrollHeight","clientHeight","scrollTo","scrollToMyRef","Fragment","wordBreak","dateFns","room","removeChats","InputBox","setMsg","handleSumbit","now","displayName","endIcon","flexGrow","overflow","TabPanel","children","other","role","hidden","p","a11yProps","setValue","Paper","square","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","icon","rx_all_users","rx_me","rx_myroomlist","rx_allroomlist","rx_allmsglist","rx_connected","rx_loading1","rx_loading2","rx_loading3","rx_msglength","rx_all_my_msglength","CM_connectValue","CM_all_users","some","CM_allroomlist","CM_allmsglist","msg_length","CM_msgLength","clone_response","item2","CM_my_msgLength","hello2","reduce","stack","el","CM_my_msgLength_change2","you","clone_data","sort","clone_allroomlist","clone_allroomlist2","CM_Roomadd","rx_authenticated","onAuthStateChanged","user","CM_login_state","path","Chat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","logger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7a42859e.chunk.js","sourcesContent":["const RX_AUTHENTICATED = \"menu/RX_AUTHENTICATED\";\nconst RX_ALL_USERS = \"menu/RX_ALL_USERS\";\nconst RX_ME = \"menu/RX_ME\";\nconst RX_CONNECTED = \"menu/RX_CONNECTED\";\nconst RX_MYROOMLIST = \"menu/RX_MYROOMLIST\";\nconst RX_ALLROOMLIST = \"menu/RX_ALLROOMLIST\";\nconst RX_ALLMSGLIST = \"menu/RX_ALLMSGLIST\";\nconst RX_FOCUSMSG = \"menu/RX_FOCUSMSG\";\nconst RX_REMOVE = \"menu/RX_REMOVE\";\nconst RX_FOCUSROOM = \"menu/RX_FOCUSROOM\";\nconst RX_LOADING1 = \"menu/RX_LOADING1\";\nconst RX_LOADING2 = \"menu/RX_LOADING2\";\nconst RX_LOADING3 = \"menu/RX_LOADING3\";\n\nconst RX_MSGLENGTH = \"menu/RX_MSGLENGTH\";\nconst RX_MSGLENGTH2 = \"menu/RX_MSGLENGTH2\";\nconst RX_ALL_MY_MSGLENGTH = \"menu/RX_ALL_MY_MSGLENGTH\";\n\nconst RX_TABINDEX = \"menu/RX_TABINDEX\";\n\nexport const rx_authenticated = (result) => ({\n  type: RX_AUTHENTICATED,\n  result,\n});\n\nexport const rx_all_users = (result) => ({\n  type: RX_ALL_USERS,\n  result,\n});\n\nexport const rx_me = (result) => ({\n  type: RX_ME,\n  result,\n});\n\nexport const rx_connected = (result) => ({\n  type: RX_CONNECTED,\n  result,\n});\n\nexport const rx_myroomlist = (result) => ({\n  type: RX_MYROOMLIST,\n  result,\n});\n\nexport const rx_allroomlist = (result) => ({\n  type: RX_ALLROOMLIST,\n  result,\n});\n\nexport const rx_allmsglist = (result) => ({\n  type: RX_ALLMSGLIST,\n  result,\n});\n\nexport const rx_focusmsg = (result) => ({\n  type: RX_FOCUSMSG,\n  result,\n});\n\nexport const rx_remove = (key) => ({\n  type: RX_REMOVE,\n  key,\n});\n\nexport const rx_focusroom = (result) => ({\n  type: RX_FOCUSROOM,\n  result,\n});\n\nexport const rx_loading1 = (result) => ({\n  type: RX_LOADING1,\n  result,\n});\nexport const rx_loading2 = (result) => ({\n  type: RX_LOADING2,\n  result,\n});\nexport const rx_loading3 = (result) => ({\n  type: RX_LOADING3,\n  result,\n});\n\nexport const rx_msglength = (result) => ({\n  type: RX_MSGLENGTH,\n  result,\n});\nexport const rx_msglength2 = (result) => ({\n  type: RX_MSGLENGTH2,\n  result,\n});\nexport const rx_all_my_msglength = (result) => ({\n  type: RX_ALL_MY_MSGLENGTH,\n  result,\n});\n\n\nexport const rx_tabindex = (result) => ({\n  type: RX_TABINDEX,\n  result,\n});\n\nconst initialState = {\n  authenticated: false,\n  all_users: [],\n  me: {},\n  all_connected: \"\",\n  myroomlist: [],\n  allroomlist: [],\n  allmsglist: [],\n  focusmsg: [],\n  focusroom: \"\",\n  loading1:false,\n  loading2:false,\n  loading3: false,\n  msglength: null,\n  msglength2: null,\n  all_my_msglength: 0,\n  tabindex:0\n};\n\nfunction chats(state = initialState, action) {\n  switch (action.type) {\n    case RX_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: action.result,\n      };\n    case RX_ALL_USERS:\n      return {\n        ...state,\n        all_users: action.result,\n      };\n    case RX_ME:\n      return {\n        ...state,\n        me: action.result,\n      };\n    case RX_CONNECTED:\n      return {\n        ...state,\n        all_connected: action.result,\n      };\n    case RX_MYROOMLIST:\n      return {\n        ...state,\n        myroomlist: action.result,\n      };\n    case RX_ALLROOMLIST:\n      return {\n        ...state,\n        // item.name.push(all_users.filter((data) => data.uid === item.uid))\n        allroomlist: action.result,\n      };\n    case RX_ALLMSGLIST:\n      return {\n        ...state,\n        allmsglist: action.result,\n      };\n    case RX_FOCUSMSG:\n      return {\n        ...state,\n        focusmsg: action.result,\n      };\n    case RX_REMOVE:\n      return {\n        ...state,\n        focusmsg: state.focusmsg.filter((todo) => todo.key !== action.key),\n      };\n    case RX_FOCUSROOM:\n      return {\n        ...state,\n        focusroom: action.result,\n      };\n    case RX_LOADING1:\n      return {\n        ...state,\n        loading1: action.result,\n      };\n    case RX_LOADING2:\n      return {\n        ...state,\n        loading2: action.result,\n      };\n    case RX_LOADING3:\n      return {\n        ...state,\n        loading3: action.result,\n      };\n\n    case RX_MSGLENGTH:\n      return {\n        ...state,\n        msglength: action.result,\n      };\n    case RX_MSGLENGTH2:\n      return {\n        ...state,\n        msglength2: action.result,\n      };\n    case RX_ALL_MY_MSGLENGTH:\n      return {\n        ...state,\n        all_my_msglength: action.result,\n      };\n    \n    case RX_TABINDEX:\n      return {\n        ...state,\n        tabindex: action.result,\n      };\n    \n    default:\n      return state;\n  }\n}\n\nexport default chats;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAtKM1gMUkzx8Al9G5Y6jozCsTTezqmo4M\",\n  authDomain: \"dongtalk-82851.firebaseapp.com\",\n  databaseURL: \"https://dongtalk-82851-default-rtdb.firebaseio.com\",\n  projectId: \"dongtalk-82851\",\n  storageBucket: \"dongtalk-82851.appspot.com\",\n  messagingSenderId: \"63820293757\",\n  appId: \"1:63820293757:web:1d2960afd6d6ddf589b314\",\n  measurementId: \"G-E7K9VBW4D0\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const fire = firebase;\nexport const fireauth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const firedatabase = firebase.database();\n\n//const provider = new firebase.auth.GoogleAuthProvider();\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\n//provider.setCustomParameters({prompt: 'select_account'});\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\n\n// export default firebase;\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.\n","import { fire, fireauth, firedatabase } from \"../services/firebase\";\r\n\r\n//##########################################################\r\n//########### 로그인 여부를 판단해주는 함수(firebase) ################\r\n//##########################################################\r\nexport function CM_login_state(rx_authenticated) {\r\n  fireauth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      //로그인상태---\r\n      console.log(\"App/로그인\", user);\r\n      //#########################\r\n      connected(true);\r\n      rx_authenticated(true); //현재 로그인 여부 파악을 위한 값\r\n      //#########################\r\n    } else {\r\n      //로그아웃상태---\r\n      console.log(\"App/로그아웃\", user);\r\n      //#########################\r\n      connected(false);\r\n      rx_authenticated(false); //현재 로그인 여부 파악을 위한 값\r\n      //#########################\r\n    }\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 실시간 접속여부 관련된 함수들 ################\r\n//##########################################################\r\nexport function connected(authenticated) {\r\n  if (authenticated === true) {\r\n    var userUid = fireauth.currentUser.uid;\r\n    var myConnectionsRef = firedatabase.ref(`UsersConnection/${userUid}`);\r\n    var connectedRef = firedatabase.ref(\".info/connected\");\r\n    connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        console.log(\"connected\");\r\n        myConnectionsRef.set({\r\n          connection: true,\r\n          uid: userUid,\r\n        });\r\n      } else {\r\n        console.log(\"not connected\");\r\n        myConnectionsRef.set({\r\n          connection: false,\r\n          uid: userUid,\r\n        });\r\n      }\r\n    });\r\n    myConnectionsRef.onDisconnect().set({ connection: false, uid: userUid });\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 로그인 유지 (브라우져 닫으면 로그인 유지 풀림) ################\r\n//##########################################################\r\nexport function login_maintain(member) {\r\n  console.log(\"member\", member);\r\n  fireauth\r\n    .setPersistence(fire.auth.Auth.Persistence.SESSION)\r\n    .then(() => {\r\n      //로그인 유지 중\r\n      console.log(\"로그인 유지 중\");\r\n      return fireauth.signInWithEmailAndPassword(member.email, member.password);\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      console.log(\"로그인 유지 실패\");\r\n\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(\"errorCode\", errorCode);\r\n      console.log(\"errorMessage\", errorMessage);\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 유저 현재 접속 여부 확인을 위한 데이터 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_connectValue(rx_connected) {\r\n  //firebase 에서 connect 안의 데이터전부를 불러와서 리덕스(rx_connected)에 넣어주기\r\n  // console.log(\"fireauth.currentUser.uid\", fireauth.currentUser.uid);\r\n  firedatabase.ref(`UsersConnection`).on(\"value\", (snapshot) => {\r\n    console.log(\"sfajklas\", Object.values(snapshot.val()));\r\n    rx_connected(Object.values(snapshot.val())); //리덕스에도 넣어주기\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 유저 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_all_users(rx_all_users, rx_me, rx_loading1) {\r\n  firedatabase.ref(\"all_users\").on(\"value\", (snapshot) => {\r\n    let response = Object.values(snapshot.val());\r\n    rx_all_users(response); //리덕스에도 넣어주기\r\n    console.log(\"response\", response);\r\n\r\n    const me = response.filter((data) =>\r\n      data.uid.includes(fireauth.currentUser.uid)\r\n    );\r\n    rx_me(me); //리덕스에도 넣어주기\r\n    login_maintain(me[0]);\r\n    console.log(\"me\", me);\r\n    rx_loading1(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 전체 방 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allroomlist(rx_allroomlist, rx_myroomlist, rx_loading2) {\r\n  firedatabase.ref(\"room\").on(\"value\", (snapshot) => {\r\n    if (snapshot.val() !== null) {\r\n      let response = Object.values(snapshot.val());\r\n      console.log(\"roomListBox\", response);\r\n      rx_allroomlist(response);\r\n\r\n      const found = response.filter((element) =>\r\n        element.uid.some((item) => item === fireauth.currentUser.uid)\r\n      );\r\n      rx_myroomlist(found);\r\n      console.log(\"found\", found);\r\n    } else {\r\n      console.log(\"else\");\r\n      rx_allroomlist([]);\r\n      rx_myroomlist([]);\r\n    }\r\n    rx_loading2(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메세지 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allmsglist(rx_allmsglist, rx_loading3) {\r\n  firedatabase.ref(\"msg\").on(\"value\", (snapshot) => {\r\n    if (snapshot.val() !== null) {\r\n      let response = snapshot.val();\r\n      rx_allmsglist(response);\r\n    }\r\n    rx_loading3(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메시지 삭제(firebase) ################\r\n//##########################################################\r\nexport const removeChats = (room, key, rx_remove) => {\r\n  firedatabase.ref(`msg/${room}/${key}`).remove();\r\n  rx_remove(key); //리덕스 스토어 데이터에도 삭제된 키값을 전달해줘서 삭제시켜준다.\r\n  console.log(\"[메시지 삭제]removeChats\", room, key);\r\n}; //removeChats\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메시지 서버로 보내기(firebase) ################\r\n//##########################################################\r\nexport function sendChat(msg, focusroom) {\r\n  if (focusroom !== \"\") {\r\n    var newPostKey = firedatabase.ref(`msg/${focusroom}`).push().key;\r\n\r\n    var postData = {\r\n      message: msg.message,\r\n      timestamp: msg.timestamp,\r\n      uid: msg.uid,\r\n      avatar: msg.avatar,\r\n      key: newPostKey,\r\n      name: msg.name,\r\n    };\r\n\r\n    var updates = {};\r\n    updates[`msg/${focusroom}/${newPostKey}`] = postData;\r\n    return firedatabase.ref().update(updates);\r\n  } else {\r\n    alert(\"방을 선택해주세요\");\r\n  }\r\n} //sendChat\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 이메일 로그인 함수 ################\r\n//##########################################################\r\nexport function signIn(member) {\r\n  return fireauth\r\n    .signInWithEmailAndPassword(member.email, member.password)\r\n    .then(() => {\r\n      //dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      console.log(\"signIn()로그인성공\");\r\n    })\r\n    .catch((err) => {\r\n      //dispatch({ type: \"LOGIN_ERROR\", err });\r\n      console.log(\"signIn()실패\");\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 회원가입 함수 ################\r\n//##########################################################\r\nexport function signUp(member) {\r\n  return fireauth\r\n    .createUserWithEmailAndPassword(member.email, member.password)\r\n    .then(() => {\r\n      console.log(\"signUp()가입성공\", member.email, member.password);\r\n      // 여기는 별도 회원 데이터 저장하기 위한 기능\r\n      var newPostKey = firedatabase.ref(\"all_users\").push().key;\r\n      var postData = {\r\n        email: member.email,\r\n        name: member.name,\r\n        password: member.password,\r\n        uid: fireauth.currentUser.uid,\r\n        avatar: member.avatar,\r\n        key: newPostKey,\r\n      };\r\n      var updates = {};\r\n      updates[\"/all_users/\" + newPostKey] = postData;\r\n      return firedatabase.ref().update(updates);\r\n      // //여기는 별도 회원 데이터 저장하기 위한 기능\r\n    })\r\n    .catch((error) => {\r\n      alert(\r\n        error.message ===\r\n          \"The email address is already in use by another account.\" &&\r\n          \"이미 있는 아이디입니다.\"\r\n      );\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 로그아웃 ################\r\n//##########################################################\r\nexport function CM_logout() {\r\n  firedatabase.ref(`UsersConnection/${fireauth.currentUser.uid}`).set({\r\n    connection: false,\r\n    uid: fireauth.currentUser.uid,\r\n  });\r\n  return fireauth\r\n    .signOut()\r\n    .then(() => {\r\n      // Sign-out successful.\r\n      console.log(\"로그아웃 성공\");\r\n    })\r\n    .catch((error) => {\r\n      // An error happened.\r\n      console.log(\"로그아웃 실패\");\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 내 룸 개설 ################\r\n//##########################################################\r\nexport function CM_Roomadd(me, you, allroomlist, rx_focusroom, rx_tabindex) {\r\n  const data = [me.uid, you];\r\n  const clone_data = [me.uid, you].sort();\r\n  console.log(\"handleFriend\", data[0], data[1]);\r\n\r\n  console.log(allroomlist);\r\n  let clone_allroomlist = JSON.parse(JSON.stringify(allroomlist));\r\n  clone_allroomlist = clone_allroomlist.some(\r\n    (element) =>\r\n      JSON.stringify(element.uid.sort()) === JSON.stringify(clone_data)\r\n  );\r\n\r\n  rx_tabindex(2);\r\n  if (!clone_allroomlist) {\r\n    //방이 없는경우 새방을 만들어준다.\r\n    var newPostKey = firedatabase.ref(\"room\").push().key;\r\n    rx_focusroom(newPostKey);\r\n    var postData = {\r\n      uid: [me.uid, you],\r\n      name: [],\r\n      avatar: me.avatar,\r\n      msg_key: newPostKey,\r\n    };\r\n    var updates = {};\r\n    updates[\"/room/\" + newPostKey] = postData;\r\n    return firedatabase.ref().update(updates);\r\n  } else {\r\n    //이미 방이 있는경우 포커스룸만 현재꺼로 채워준다.\r\n    let clone_allroomlist2 = JSON.parse(JSON.stringify(allroomlist));\r\n    clone_allroomlist2 = clone_allroomlist2.filter(\r\n      (item) => JSON.stringify(item.uid.sort()) === JSON.stringify(clone_data)\r\n    )[0].msg_key;\r\n\r\n    console.log(\"이미 방이 있습니다. 현재룸\", clone_allroomlist2);\r\n    rx_focusroom(clone_allroomlist2);\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 내 룸 리스트 삭제 ################\r\n//##########################################################\r\nexport const CM_removeRooms = (\r\n  key,\r\n  me,\r\n  rx_focusroom,\r\n  rx_focusmsg,\r\n  all_users\r\n) => {\r\n  var mePassword = prompt(\"본인의 비밀번호를 입력하세요\");\r\n  if (me.password === mePassword) {\r\n    firedatabase.ref(`room/${key}`).remove();\r\n    firedatabase.ref(`msg/${key}`).remove();\r\n    firedatabase.ref(`msgLength/${key}`).remove();\r\n    all_users.map((item) =>\r\n      firedatabase.ref(`msgLength2/${item.uid}/${key}`).remove()\r\n    );\r\n\r\n    rx_focusroom(\"\");\r\n    rx_focusmsg([]);\r\n    alert(\"삭제가 완료되었습니다.\");\r\n  } else {\r\n    alert(\"비밀번호가 틀려서 삭제 불가합니다\");\r\n  }\r\n};\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 실시간 접속 여부를 화면단에 뿌려줄때 사용 ################\r\n//##########################################################\r\nexport function CM_me_connected(all_connected, uid) {\r\n  //실제 화면단 포문 도는곳에\r\n  //all_connected:리덕스의 all_connected 를 넣어주고\r\n  //uid:리덕의 all_users가 포문 돌면서 하나하나 접근할때 있는 uid값\r\n  if (all_connected !== \"\") {\r\n    const found = all_connected.filter((element) => element.uid === uid);\r\n    return found.length > 0 && found[0].connection;\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//구글 로그인 기능(사용안함 중)\r\nexport function signInWithGoogle() {\r\n  const provider = new fire.auth.GoogleAuthProvider();\r\n  // provider.setCustomParameters({ prompt: 'select_account' });\r\n  return fireauth.signInWithPopup(provider);\r\n}\r\n\r\n//##########################################################\r\n//########### 룸 갯수만큼 포문돌려서 각룸 몇개의 메시지인지 초기에 확인하는 기능 ################\r\n//##########################################################\r\nexport function CM_msgLength(allmsglist, allroomlist, rx_msglength) {\r\n  console.log(\"CM_msgLength\");\r\n\r\n  //룸 갯수만큼 포문돌려서 데이터를 객체로 만들어준다.\r\n  let msg_length = {};\r\n  allroomlist.map((item, index) => {\r\n    return (msg_length[item.msg_key] = allmsglist[item.msg_key]\r\n      ? Object.values(allmsglist[item.msg_key]).length\r\n      : 0);\r\n  });\r\n  //위에서 만든 데이터를 firedatabase 에 보내 서버에 저장해준다.\r\n  firedatabase.ref(`msgLength/`).set(msg_length, (error) => {\r\n    if (error) {\r\n      // The write failed...\r\n      console.log(\"The write failed...\");\r\n    } else {\r\n      // Data saved successfully!\r\n      console.log(\"Data saved successfully!\");\r\n      //리덕스에도 넣어주기\r\n      rx_msglength(msg_length);\r\n    }\r\n  });\r\n}\r\n\r\n//##########################################################\r\n//########### 또다른 룸갯수 확인(확인전까진 위의 기능보다 낮은 숫자이다가 확인하는순간 위의기능 숫자와 동일하게 만들어줌) ################\r\n//##########################################################\r\nexport function CM_my_msgLength(allroomlist, rx_msglength2, all_users) {\r\n  console.log(\"CM_my_msgLength 실행\");\r\n  //allroomlist=룸리스트데이터\r\n  //rx_msglength2=\r\n  //all_users=전체 회원 데이터\r\n\r\n  firedatabase\r\n    .ref(`My_msgLength2`)\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      let response = snapshot.val();\r\n      if (response) {\r\n        let clone_response = JSON.parse(JSON.stringify(response));\r\n        all_users.map((item) =>\r\n          allroomlist.map(\r\n            (item2) => {\r\n              if (response[item.uid]) {\r\n                console.log('있어')                \r\n                !response[item.uid][item2.msg_key] &&\r\n                (clone_response[item.uid][item2.msg_key] = 0)  \r\n              } else {\r\n                console.log('없어')\r\n                clone_response[item.uid] = { [item2.msg_key] : 0 } \r\n              }\r\n              return  clone_response\r\n            }\r\n\r\n          )\r\n        );\r\n\r\n        firedatabase.ref(`My_msgLength2/`).set(clone_response);\r\n      } else {\r\n        all_users.map((item) =>\r\n          allroomlist.map((item2) =>\r\n            firedatabase\r\n              .ref(`My_msgLength2/${item.uid}`)\r\n              .update({ [item2.msg_key]: 0 })\r\n          )\r\n        );\r\n      }\r\n\r\n      firedatabase\r\n        .ref(`My_msgLength2`)\r\n        .once(\"value\")\r\n        .then((snapshot) => {\r\n          let response = snapshot.val();\r\n\r\n          rx_msglength2(response);\r\n        });\r\n    });\r\n}\r\n\r\nexport function CM_my_msgLength_change(\r\n  msg_key,\r\n  rx_msglength2,\r\n  msglength2,\r\n  rx_tabindex\r\n) {\r\n  if (msg_key) {\r\n    console.log(\"CM_my_msgLength_change\");\r\n\r\n    firedatabase\r\n      .ref(`msgLength/${msg_key}`)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        let response = snapshot.val();\r\n        console.log(response);\r\n        firedatabase\r\n          .ref(`My_msgLength2/${fireauth.currentUser.uid}/${msg_key}`)\r\n          .set(response, (error) => {\r\n            if (error) {\r\n              // The write failed...\r\n              console.log(\"The write failed...\");\r\n            } else {\r\n              // Data saved successfully!\r\n              console.log(\"Data saved successfully!\");\r\n              //리덕스에도 넣어주기\r\n              let clone_msglength2 = JSON.parse(JSON.stringify(msglength2));\r\n              clone_msglength2[fireauth.currentUser.uid][msg_key] = response;\r\n              console.log(clone_msglength2);\r\n              rx_msglength2(clone_msglength2);\r\n              rx_tabindex && rx_tabindex(2);\r\n            }\r\n          });\r\n      });\r\n  }\r\n}\r\n//##########################################################\r\n\r\n\r\n\r\n\r\nexport function CM_my_msgLength_change2(msglength,clone_msglength2,myroomlist,rx_all_my_msglength) {\r\n  console.log('#----CM_my_msgLength_change2');\r\n\r\n  if (myroomlist) {\r\n    let hello = myroomlist.map((item) => msglength[item.msg_key]);\r\n    let hello2 = myroomlist.map((item) => clone_msglength2[fireauth.currentUser.uid][item.msg_key] ? clone_msglength2[fireauth.currentUser.uid][item.msg_key] : 0 );\r\n    hello = hello.reduce((stack, el) => {\r\n      return stack + el;\r\n    }, 0);\r\n    hello2 = hello2.reduce((stack, el) => {\r\n      return stack + el;\r\n    }, 0);\r\n    rx_all_my_msglength(hello - hello2);\r\n  }\r\n\r\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nexport default PublicRoute;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signUp } from \"../helpers/common\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormLabel\n} from \"@material-ui/core\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Button component={Link} to=\"https://material-ui.com/\">\n        Your Website\n      </Button>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp() {\n  const classes = useStyles();\n  const [member, setMember] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    avatar:\"\",\n  });\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setMember({ ...member, [name]: value });\n  };\nconsole.log(member)\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (member.email !== \"\" && member.password !== \"\" && member.name !== \"\") {\n      signUp(member);\n    }\n  };\n\nfunction validateEmail(email){\n    var emailReg = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n  return email.length > 0 ? emailReg.test(email) : true;\n}\nfunction validateName(name){\n    var nameReg = new RegExp(/[ㄱ-ㅎㅏ-ㅣ가-힣]/g);\n  return name.length > 0 ? nameReg.test(name) : true;\n}\nfunction validatePassword(password){\n    var passwordReg = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/);\n  return password.length > 0 ? passwordReg.test(password) : true;\n}\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          회원 가입\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={member.email}\n                onChange={handleOnChange}\n                error={!validateEmail(member.email)}\n                helperText={ !validateEmail(member.email) && 'emali 형식에 맞게 입력해주세요.' }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                value={member.name}\n                onChange={handleOnChange}\n                error={!validateName(member.name)}\n                helperText={ !validateName(member.name) && '한글만 입력해주세요.' }\n\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={member.password}\n                onChange={handleOnChange}\n                error={!validatePassword(member.password)}\n                helperText={!validatePassword(member.password) && 'password는 최소 8 자, 최소 하나의 문자 및 하나의 숫자' }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div>\n                <FormLabel component=\"legend\">Avatar</FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"avatar\" value={member.avatar} onChange={handleOnChange} style={{ display:'flex',flexDirection:'row',justifyContent:'center' }}>\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/1.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />} />\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/2.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/2.jpg\" />} />\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/3.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/3.jpg\" />} />\n                </RadioGroup>\n              </div>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            가입하기\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              이미 회원이신가?{\" \"}\n              <Button component={Link} to=\"/login\">\n                로그인\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignUp\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { signIn } from \"../helpers/common\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  CssBaseline,\n  Container,\n} from \"@material-ui/core\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Button component={Link} to=\"https://material-ui.com/\">\n        Your Website\n      </Button>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login() {\n  const classes = useStyles();\n  const [member, setMember] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setMember({ ...member, [name]: value });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (member.email !== \"\" && member.password !== \"\") {\n      signIn(member);\n    }\n  };\n\nfunction validateEmail(email){\n    var emailReg = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n  return email.length > 0 ? emailReg.test(email) : true;\n}\n// function validatePassword(password){\n//     var passwordReg = new RegExp(\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\");\n//   return password.length > 0 ? passwordReg.test(password) : true;\n// }\n\n\n  // const handleGoogleSignIn = async () => {\n  //   try {\n  //     await signInWithGoogle();\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          로그인\n        </Typography>\n        <form className={classes.form} onSubmit={handleOnSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"이메일을 입력하세요.\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={member.email}\n            onChange={handleOnChange}\n            error={!validateEmail(member.email)}\n            helperText={ !validateEmail(member.email) && 'emali 제대로 입력해주세요.' }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={member.password}\n            onChange={handleOnChange}\n            error={false}\n            helperText={false && 'password는 최소 8 자, 최소 하나의 문자 및 하나의 숫자' }\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          {/* <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleGoogleSignIn}\n            className={classes.submit}\n          >\n            구글 로그인\n          </Button> */}\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n            </Grid>\n            <Grid item>\n              <Button component={Link} to=\"/signup\">\n                {\"회원가입\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { CM_removeRooms } from \"../helpers/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { fireauth } from \"../services/firebase\";\r\n\r\nimport { rx_focusroom, rx_focusmsg } from \"../modules/chats\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst FriendItem = ({\r\n  text,\r\n  sub,\r\n  uid,\r\n  avatar,\r\n  msg_key,\r\n  me,\r\n  invisible,\r\n  event,\r\n  rx_focusroom,\r\n  rx_focusmsg,\r\n  all_users,\r\n  msglength,\r\n  msglength2,\r\n}) => {\r\n  const hello = (msg_key) => {\r\n    if (msglength && msglength2) {\r\n      if (\r\n        Object.values(msglength).length ===\r\n        Object.values(msglength2[fireauth.currentUser.uid]).length\r\n      ) {\r\n        if (\r\n          msglength[msg_key] !== undefined &&\r\n          msglength2[fireauth.currentUser.uid][msg_key] !== undefined\r\n        ) {\r\n          console.log(\"갯수구하기\", msglength[msg_key] && msglength[msg_key]);\r\n          console.log(\r\n            \"갯수구하기2\",\r\n            msglength2[fireauth.currentUser.uid][msg_key] &&\r\n              msglength2[fireauth.currentUser.uid][msg_key]\r\n          );\r\n          return (\r\n            msglength &&\r\n            msglength2 &&\r\n            msglength[msg_key] - msglength2[fireauth.currentUser.uid][msg_key]\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li style={{ display: msg_key ? \"flex\" : \"block\" }}>\r\n      <ListItem button onClick={() => (msg_key ? event(msg_key) : event(uid))}>\r\n        <ListItemAvatar>\r\n          <Badge color=\"secondary\" badgeContent={msg_key ? hello(msg_key) : 0}>\r\n            <StyledBadge\r\n              invisible={invisible}\r\n              overlap=\"circular\"\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n              }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt=\"Remy Sharp\" src={avatar} />\r\n            </StyledBadge>\r\n          </Badge>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={text} secondary={sub} />\r\n      </ListItem>\r\n      {msg_key && (\r\n        <Button\r\n          onClick={() =>\r\n            CM_removeRooms(msg_key, me, rx_focusroom, rx_focusmsg, all_users)\r\n          }\r\n        >\r\n          삭제\r\n        </Button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  msglength: state.chats.msglength,\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendItem);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FriendItem from \"./FriendItem\";\r\n\r\nimport { Box, List, CircularProgress, Button } from \"@material-ui/core\";\r\n\r\nimport { CM_me_connected, CM_logout } from \"../helpers/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: '26px'\r\n  },\r\n  list: {\r\n    position: 'absolute',\r\n    top: '98px',\r\n    bottom: '72px',\r\n    left: '24px',\r\n    right: '25px',\r\n    overflowY: \"scroll\",\r\n  },\r\n  divider: {\r\n    // margin: '20px 0',\r\n  },\r\n  title: {\r\n    position: 'fixed',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '50px',\r\n    padding:'0 24px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#3f51b5',\r\n    color: '#fff',\r\n    fontSize: '20px',\r\n    fontWeight:'bold',\r\n    \"& button\": {\r\n      position: 'absolute',\r\n      right: '10px',\r\n      color:'#fff'\r\n    }\r\n  }\r\n}));\r\n\r\nconst FriendList = ({\r\n  title,\r\n  data,\r\n  event,\r\n  all_users,\r\n  all_connected,\r\n  me,\r\n  loading,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function uid_name(names) {\r\n    return (\r\n      names !== undefined &&\r\n      all_users.length > 0 &&\r\n      all_users.filter((data) => data.uid === names)[0].name\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]FriendList.js\");\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <div  className={classes.title}>\r\n        {me && me.name} \r\n        <Button onClick={() => {\r\n            CM_logout();\r\n          }}>로그아웃</Button>\r\n      </div>\r\n      <ListSubheader component=\"div\">{title}</ListSubheader>\r\n\r\n      <List className={classes.list}>\r\n        {loading && (\r\n          <Box\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress color=\"secondary\" />\r\n          </Box>\r\n        )}\r\n\r\n        {data.length > 0 ? (\r\n          data.map((data, index) => (\r\n            <FriendItem\r\n              key={index}\r\n              invisible={!CM_me_connected(all_connected, data.uid)}\r\n              text={\r\n                Array.isArray(data.uid)\r\n                  ? data.uid.map((item, index) =>\r\n                      index > 0 ? `/${uid_name(item)}` : uid_name(item)\r\n                    )\r\n                  : uid_name(data.uid)\r\n              }\r\n              sub={data.email === undefined ? \"1:1 대화방\" : data.email}\r\n              uid={data.uid}\r\n              avatar={data.avatar}\r\n              msg_key={data.msg_key}\r\n              me={me}\r\n              event={event}\r\n            />\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n\r\n      {/* <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n          </List>\r\n          \r\n          <Divider className={classes.divider} />\r\n          <ListSubheader>나의 방 리스트</ListSubheader>\r\n          <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n          </List> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  all_connected: state.chats.all_connected,\r\n  me: state.chats.me[0],\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   rx_focusroom: (val) => {\r\n//     dispatch(rx_focusroom(val));\r\n//   },\r\n// });\r\n\r\nexport default connect(mapStateToProps, null)(FriendList);\r\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { firedatabase } from \"../services/firebase\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { connect } from \"react-redux\";\n\nimport { blue } from \"@material-ui/core/colors\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open, data, focusroom } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    console.log(\"까르르르궁\", data);\n  };\n\n  const handleListItemClick = (uid) => {\n    firedatabase\n      .ref(`room/${focusroom}/uid`)\n      .once(\"value\")\n      .then((snapshot) => {\n        const f_add = snapshot.val();\n\n        if (!f_add.includes(uid)) {\n          //중복 친구가 없는경우 추가\n          f_add.push(uid);\n          firedatabase\n            .ref(`room/${focusroom}`)\n            .update({\n              uid: f_add,\n            })\n            .then(() => {\n              console.log(\"친추 완료\", f_add);\n            })\n            .catch((error) => {\n              console.log(\"친추 실패\");\n            });\n        } else {\n          //중복 친구가 있는경우 알럿 노출\n          alert(\"이미 추가된 친구입니다.\");\n        }\n      });\n    onClose(false);\n  };\n\n  console.log(\"까르르르궁\", data);\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">친구 리스트</DialogTitle>\n      <List>\n        {data.length > 0 ? (\n          data.map((item, index) => (\n            <ListItem\n              button\n              onClick={() => handleListItemClick(item.uid)}\n              key={index}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.name} />\n            </ListItem>\n          ))\n        ) : (\n          <li>리스트가없습니다.</li>\n        )}\n      </List>\n    </Dialog>\n  );\n}\n\n// SimpleDialog.propTypes = {\n//   onClose: PropTypes.func.isRequired,\n//   open: PropTypes.bool.isRequired,\n//   selectedValue: PropTypes.string.isRequired,\n// };\n\nconst FriendAdd = ({ all_users, focusroom }) => {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        친구추가\n      </Button>\n      <SimpleDialog\n        data={all_users}\n        focusroom={focusroom}\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  all_users: state.chats.all_users,\n  focusroom: state.chats.focusroom,\n});\n\nexport default connect(mapStateToProps, null)(FriendAdd);","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { rx_remove } from \"../modules/chats\";\r\nimport { fireauth } from \"../services/firebase\";\r\n\r\nimport * as dateFns from \"date-fns\";\r\nimport { removeChats, CM_logout } from \"../helpers/common\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport FriendAdd from \"./FriendAdd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop:'26px',\r\n\r\n    // position: 'absolute',\r\n    // top: '50px',\r\n    // bottom: '72px',\r\n    // left: '24px',\r\n    // right: '25px',\r\n    // overflowY: \"scroll\",\r\n  },\r\n  lBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  rBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    \"& input,& button\": {\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n    },\r\n  },\r\n\r\n  listBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: 'absolute',\r\n    top: '98px',\r\n    bottom: '165px',\r\n    left: '24px',\r\n    right: '25px',\r\n    overflowY: \"scroll\",\r\n  },\r\n  listBoxItem: {\r\n    display: \"block\",\r\n  },\r\n  listBoxItemavatar: {\r\n    display: \"flex\",\r\n  },\r\n  title: {\r\n    position: 'fixed',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '50px',\r\n    padding:'0 24px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#3f51b5',\r\n    color: '#fff',\r\n    fontSize: '20px',\r\n    fontWeight:'bold',\r\n    \"& button\": {\r\n      position: 'absolute',\r\n      right: '10px',\r\n      color:'#fff'\r\n    }\r\n  }\r\n}));\r\n\r\nconst Message = ({ focusmsg, focusroom, rx_remove, loading, me }) => {\r\n  const classes = useStyles();\r\n  console.log(\"Message-focusroom\", focusroom);\r\n  const intervalId = useRef(null);\r\n\r\n  function scrollToMyRef() {\r\n    const scroll =\r\n      intervalId.current.scrollHeight - intervalId.current.clientHeight;\r\n    intervalId.current.scrollTo(0, scroll);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Message.js\");\r\n    scrollToMyRef();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [focusmsg, focusroom]);\r\n\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {loading && (\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      )}\r\n      <div className={classes.title}>\r\n        {me && me.name} \r\n        <Button onClick={() => {\r\n            CM_logout();\r\n          }}>로그아웃</Button>\r\n      </div>\r\n      <ListSubheader\r\n        component=\"div\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        채팅방\r\n        {focusroom !== \"\" && <FriendAdd />}\r\n      </ListSubheader>\r\n      <List className={classes.listBox} ref={intervalId}>\r\n        {focusmsg.length > 0 ? (\r\n          focusmsg.map((data, index) => (\r\n            <ListItem key={index} className={classes.listBoxItem}>\r\n              <Box\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection:\r\n                    fireauth.currentUser.uid === data.uid\r\n                      ? \"row-reverse\"\r\n                      : \"row\",\r\n                  textAlign:\r\n                    fireauth.currentUser.uid === data.uid ? \"right\" : \"left\",\r\n                }}\r\n              >\r\n                <ListItemAvatar\r\n                  className={classes.listBoxItemavatar}\r\n                  style={{\r\n                    justifyContent:\r\n                      fireauth.currentUser.uid === data.uid\r\n                        ? \"flex-end\"\r\n                        : \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Avatar alt=\"Remy Sharp\" src={data.avatar} />\r\n                </ListItemAvatar>\r\n\r\n                <ListItemText\r\n                  primary={data.name}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        color=\"textPrimary\"\r\n                        style={{ wordBreak: \"break-all\" }}\r\n                      >\r\n                        {data.message}\r\n                      </Typography>\r\n                      <br />\r\n                      {dateFns.format(data.timestamp, \"yyyy-MM-dd HH:mm:ss\")}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n                <Button\r\n                  style={{\r\n                    display:\r\n                      fireauth.currentUser.uid !== data.uid\r\n                        ? \"none\"\r\n                        : \"inline-flex\",\r\n                  }}\r\n                  onClick={() => removeChats(focusroom, data.key, rx_remove)}\r\n                >\r\n                  삭제\r\n                </Button>\r\n              </Box>\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n  me: state.chats.me[0],\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_remove: (val) => {\r\n    dispatch(rx_remove(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fireauth } from \"../services/firebase\";\r\nimport { sendChat, CM_my_msgLength_change } from \"../helpers/common\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Box, Button, TextField } from \"@material-ui/core\";\r\n\r\nimport { rx_msglength2 } from \"../modules/chats\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  InputBox: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    position: \"absolute\",\r\n    bottom: \"70px\",\r\n    left: '0',\r\n    width: \"96%\",\r\n    margin: \"2%\",\r\n    padding: \"2%\",\r\n    boxShadow: \"1px 1px 5px #a0a0a0\",\r\n    borderRadius: \"5px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InputBox = ({ focusroom, me, rx_msglength2, msglength2 }) => {\r\n  const classes = useStyles();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    sendChat(\r\n      {\r\n        message: msg,\r\n        timestamp: Date.now(),\r\n        uid: fireauth.currentUser.uid,\r\n        avatar: me.avatar,\r\n        name:\r\n          fireauth.currentUser.displayName === null\r\n            ? me.name\r\n            : fireauth.currentUser.displayName,\r\n      },\r\n      focusroom\r\n    );\r\n    CM_my_msgLength_change(focusroom, rx_msglength2, msglength2);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumbit}>\r\n      <Box className={classes.InputBox}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"메시지\"\r\n          value={msg}\r\n          onChange={handleOnChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          endIcon={<SendIcon />}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n  me: state.chats.me[0],\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_msglength2: (val) => {\r\n    dispatch(rx_msglength2(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputBox);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { rx_tabindex } from \"../modules/chats\";\r\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\r\nimport { connect } from \"react-redux\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    margin: \"0 auto\",\r\n    overflow: \"hidden\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-prevent-tab-${index}`,\r\n    \"aria-controls\": `scrollable-prevent-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst TabBox = ({ content, rx_tabindex, tabindex, all_my_msglength }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    rx_tabindex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]TabBox.js\", tabindex);\r\n    setValue(tabindex);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabindex]);\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <TabPanel value={value} index={0}>\r\n        {content[0]}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {content[1]}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        {content[2]}\r\n      </TabPanel>\r\n\r\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          aria-label=\"icon label tabs example\"\r\n        >\r\n          <Tab icon={<PersonIcon />} label=\"친구\" {...a11yProps(0)} />\r\n          <Tab\r\n            icon={\r\n              <Badge color=\"secondary\" badgeContent={all_my_msglength}>\r\n                <ViewColumnIcon />\r\n              </Badge>\r\n            }\r\n            label=\"방리스트\"\r\n            {...a11yProps(1)}\r\n          />\r\n          <Tab icon={<QuestionAnswerIcon />} label=\"채팅\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tabindex: state.chats.tabindex,\r\n  all_my_msglength: state.chats.all_my_msglength,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_tabindex: (val) => {\r\n    dispatch(rx_tabindex(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabBox);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CM_all_users,\r\n  CM_allroomlist,\r\n  CM_allmsglist,\r\n  CM_Roomadd,\r\n  login_maintain,\r\n  CM_connectValue,\r\n  CM_msgLength,\r\n  CM_my_msgLength,\r\n  CM_my_msgLength_change,\r\n  CM_my_msgLength_change2\r\n} from \"../helpers/common\";\r\n\r\nimport {\r\n  rx_all_users,\r\n  rx_me,\r\n  rx_myroomlist,\r\n  rx_allroomlist,\r\n  rx_focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  rx_focusmsg,\r\n  rx_loading1,\r\n  rx_loading2,\r\n  rx_loading3,\r\n  rx_msglength,\r\n  rx_msglength2,\r\n  rx_tabindex,\r\n  rx_all_my_msglength\r\n} from \"../modules/chats\";\r\n\r\nimport {\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\n\r\nimport FriendList from \"../components/FriendList\";\r\nimport Message from \"../components/Message\";\r\nimport InputBox from \"../components/InputBox\";\r\nimport TabBox from \"../components/TabBox\";\r\n\r\nconst Chat = ({\r\n  rx_all_users,\r\n  all_users,\r\n  rx_me,\r\n  me,\r\n  rx_myroomlist,\r\n  myroomlist,\r\n  rx_allroomlist,\r\n  allroomlist,\r\n  rx_focusroom,\r\n  focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  allmsglist,\r\n  rx_focusmsg,\r\n  focusmsg,\r\n  rx_loading1,\r\n  rx_loading2,\r\n  rx_loading3,\r\n  loading1,\r\n  loading2,\r\n  loading3,\r\n  rx_msglength,\r\n  rx_msglength2,\r\n  msglength,\r\n  msglength2,\r\n  rx_tabindex,\r\n  rx_all_my_msglength\r\n}) => {\r\n\r\n\r\n  const handleFriend = (you) => {\r\n    CM_Roomadd(me, you, allroomlist, rx_focusroom, rx_tabindex);\r\n  };\r\n\r\n  const handleRoom = (msg_key) => {\r\n    console.log(\"handleRoom\");\r\n    rx_focusroom(msg_key);\r\n    CM_my_msgLength_change(msg_key, rx_msglength2, msglength2, rx_tabindex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Chat.js\");\r\n    CM_connectValue(rx_connected);\r\n    rx_loading1(true);\r\n    rx_loading2(true);\r\n    rx_loading3(true);\r\n    CM_all_users(rx_all_users, rx_me, rx_loading1);\r\n    CM_allroomlist(rx_allroomlist, rx_myroomlist, rx_loading2);\r\n    CM_allmsglist(rx_allmsglist, rx_loading3);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    allmsglist[focusroom]\r\n      ? rx_focusmsg(Object.values(allmsglist[focusroom]))\r\n      : rx_focusmsg([]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allmsglist, focusroom]);\r\n\r\n  useEffect(() => {\r\n    if (allroomlist.length > 0) {\r\n      CM_msgLength(allmsglist, allroomlist, rx_msglength);\r\n      console.log(\"초기 메시지 갯수 세팅\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allroomlist, allmsglist]);\r\n\r\n  useEffect(() => {\r\n    if (allroomlist.length > 0) {\r\n      CM_my_msgLength(allroomlist, rx_msglength2, all_users);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allroomlist]);\r\n\r\n  useEffect(() => {\r\n    if (msglength !== null && msglength2 !== null) {\r\n        CM_my_msgLength_change2(msglength, msglength2, myroomlist, rx_all_my_msglength);\r\n      }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [msglength,msglength2]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <TabBox\r\n        content={[\r\n          <FriendList\r\n            title=\"전체 친구 리스트\"\r\n            data={all_users}\r\n            loading={loading1}\r\n            event={handleFriend}\r\n          />,\r\n          <FriendList\r\n            title=\"나의 방 리스트\"\r\n            data={myroomlist}\r\n            loading={loading2}\r\n            event={handleRoom}\r\n          />,\r\n          <>\r\n            <Message focusmsg={focusmsg} loading={loading3} />\r\n            <InputBox />\r\n          </>,\r\n        ]}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nChat.propTypes = {\r\n  rx_all_users: PropTypes.func,\r\n  all_users: PropTypes.array,\r\n  rx_me: PropTypes.func,\r\n  me: PropTypes.object,\r\n  rx_myroomlist: PropTypes.func,\r\n  myroomlist: PropTypes.array,\r\n  rx_allroomlist: PropTypes.func,\r\n  allroomlist: PropTypes.array,\r\n  rx_focusroom: PropTypes.func,\r\n  focusroom: PropTypes.string,\r\n  rx_allmsglist: PropTypes.func,\r\n  rx_connected: PropTypes.func,\r\n  allmsglist: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  rx_focusmsg: PropTypes.func,\r\n  focusmsg: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  myroomlist: state.chats.myroomlist,\r\n  allroomlist: state.chats.allroomlist,\r\n  me: state.chats.me[0],\r\n  focusroom: state.chats.focusroom,\r\n  allmsglist: state.chats.allmsglist,\r\n  focusmsg: state.chats.focusmsg,\r\n  loading1: state.chats.loading1,\r\n  loading2: state.chats.loading2,\r\n  loading3: state.chats.loading3,\r\n  msglength: state.chats.msglength,\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_all_users: (val) => {\r\n    dispatch(rx_all_users(val));\r\n  },\r\n  rx_me: (val) => {\r\n    dispatch(rx_me(val));\r\n  },\r\n  rx_myroomlist: (val) => {\r\n    dispatch(rx_myroomlist(val));\r\n  },\r\n  rx_allroomlist: (val) => {\r\n    dispatch(rx_allroomlist(val));\r\n  },\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_allmsglist: (val) => {\r\n    dispatch(rx_allmsglist(val));\r\n  },\r\n  rx_connected: (val) => {\r\n    dispatch(rx_connected(val));\r\n  },\r\n  login_maintain: (val) => {\r\n    dispatch(login_maintain(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  },\r\n  rx_loading1: (val) => {\r\n    dispatch(rx_loading1(val));\r\n  },\r\n  rx_loading2: (val) => {\r\n    dispatch(rx_loading2(val));\r\n  },\r\n  rx_loading3: (val) => {\r\n    dispatch(rx_loading3(val));\r\n  },\r\n  rx_msglength: (val) => {\r\n    dispatch(rx_msglength(val));\r\n  },\r\n  rx_msglength2: (val) => {\r\n    dispatch(rx_msglength2(val));\r\n  },\r\n  rx_tabindex: (val) => {\r\n    dispatch(rx_tabindex(val));\r\n  },\r\n  rx_all_my_msglength: (val) => {\r\n    dispatch(rx_all_my_msglength(val));\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HashRouter, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { rx_authenticated } from \"./modules/chats\";\nimport { CM_logout } from \"./helpers/common\";\nimport { CM_login_state } from \"./helpers/common\";\n\nimport Button from '@material-ui/core/Button';\n\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport SignUp from \"./containers/SignUp\";\nimport Login from \"./containers/Login\";\nimport Chat from \"./containers/Chat\";\n\nfunction App({ rx_authenticated, authenticated, me }) {\n  useEffect(() => {\n    console.log(\"[표시]App.js\");\n    CM_login_state(rx_authenticated);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <HashRouter>\n      <Switch>\n        <PrivateRoute\n          path=\"/chat\"\n          authenticated={authenticated}\n          component={Chat}\n        />\n        <PublicRoute\n          path=\"/signup\"\n          authenticated={authenticated}\n          component={SignUp}\n        />\n        <PublicRoute\n          path={[\"/\", \"/login\"]}\n          authenticated={authenticated}\n          component={Login}\n        />\n      </Switch>\n      {authenticated &&\n        <Button variant=\"contained\"\n          style={{ display:'none' , width: '200px', height: '50px', margin:'50px auto 0 auto' }}\n          onClick={() => {\n            CM_logout();\n          }}>로그아웃({ me && me.name })</Button>\n      }\n    </HashRouter>\n  );\n}\n\n\nApp.propTypes = {\n  rx_authenticated: PropTypes.func,\n  authenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.chats.authenticated,\n  me: state.chats.me[0],\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  rx_authenticated: (val) => {\n    dispatch(rx_authenticated(val));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport chats from \"./chats\";\n// import auth from \"./auth\";\n\nconst rootReducer = combineReducers({\n  chats,\n  // auth,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport rootReducer from \"./modules\";\nimport { createLogger } from \"redux-logger\";\n\nconst logger = createLogger();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}