{"version":3,"sources":["modules/chats.js","services/firebase.js","helpers/common.js","components/PublicRoute.js","components/PrivateRoute.js","containers/SignUp.js","containers/Login.js","components/FriendItem.js","components/FriendList.js","components/FriendAdd.js","components/Message.js","components/InputBox.js","containers/Chat.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["RX_AUTHENTICATED","RX_ALL_USERS","RX_ME","RX_CONNECTED","RX_MYROOMLIST","RX_ALLROOMLIST","RX_ALLMSGLIST","RX_FOCUSMSG","RX_REMOVE","RX_FOCUSROOM","RX_LOADING1","RX_LOADING2","RX_LOADING3","RX_MSGLENGTH","RX_MSGLENGTH2","rx_focusmsg","result","type","rx_focusroom","rx_msglength2","initialState","authenticated","all_users","me","all_connected","myroomlist","allroomlist","allmsglist","focusmsg","focusroom","loading1","loading2","loading3","msglength","msglength2","chats","state","action","filter","todo","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fire","fireauth","auth","firedatabase","firestore","database","connected","userUid","currentUser","uid","myConnectionsRef","ref","on","snap","val","console","log","set","connection","onDisconnect","login_maintain","member","setPersistence","Auth","Persistence","SESSION","then","signInWithEmailAndPassword","email","password","catch","error","errorCode","code","errorMessage","message","sendChat","msg","newPostKey","push","postData","timestamp","avatar","name","updates","update","alert","signIn","err","signUp","createUserWithEmailAndPassword","CM_me_connected","found","element","length","CM_my_msgLength_change","msg_key","once","snapshot","response","PublicRoute","Component","component","rest","render","props","to","PrivateRoute","pathname","from","location","Copyright","Typography","variant","color","align","Button","Link","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","setMember","handleOnChange","e","target","value","handleOnSubmit","a","preventDefault","validateEmail","emailReg","RegExp","test","validateName","nameReg","validatePassword","passwordReg","Container","maxWidth","CssBaseline","className","Avatar","noValidate","onSubmit","Grid","container","item","xs","TextField","required","fullWidth","id","label","autoComplete","onChange","helperText","FormLabel","RadioGroup","aria-label","style","justifyContent","FormControlLabel","control","Radio","alt","src","Box","mt","Login","autoFocus","StyledBadge","withStyles","badge","boxShadow","background","position","top","left","height","borderRadius","animation","border","content","transform","opacity","Badge","connect","dispatch","text","sub","invisible","event","ListItem","button","onClick","ListItemAvatar","badgeContent","Object","values","undefined","hello","overlap","anchorOrigin","vertical","horizontal","ListItemText","primary","mePassword","prompt","remove","map","CM_removeRooms","root","list","overflowY","divider","title","data","loading","uid_name","names","useEffect","ListSubheader","List","CircularProgress","index","Array","isArray","emails","blue","SimpleDialog","onClose","selectedValue","open","Dialog","aria-labelledby","DialogTitle","f_add","includes","React","setOpen","setSelectedValue","lBox","textAlign","rBox","appBar","bottom","listBox","listBoxItem","listBoxItemavatar","rx_remove","intervalId","useRef","scroll","current","scrollHeight","clientHeight","scrollTo","scrollToMyRef","paddingBottom","Fragment","wordBreak","dateFns","room","removeChats","InputBox","padding","setMsg","handleSumbit","now","displayName","endIcon","chat_wrap","rx_all_users","rx_me","rx_myroomlist","rx_allroomlist","rx_allmsglist","rx_connected","rx_loading1","rx_loading2","rx_loading3","rx_msglength","CM_connectValue","CM_all_users","some","CM_allroomlist","CM_allmsglist","msg_length","CM_msgLength","clone_response","JSON","parse","stringify","item2","CM_my_msgLength","Paper","elevation","sm","sectionDesktop","you","clone_data","sort","clone_allroomlist","CM_Roomadd","Divider","rx_authenticated","onAuthStateChanged","user","CM_login_state","path","Chat","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","logger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.45130ef4.chunk.js","sourcesContent":["const RX_AUTHENTICATED = \"menu/RX_AUTHENTICATED\";\nconst RX_ALL_USERS = \"menu/RX_ALL_USERS\";\nconst RX_ME = \"menu/RX_ME\";\nconst RX_CONNECTED = \"menu/RX_CONNECTED\";\nconst RX_MYROOMLIST = \"menu/RX_MYROOMLIST\";\nconst RX_ALLROOMLIST = \"menu/RX_ALLROOMLIST\";\nconst RX_ALLMSGLIST = \"menu/RX_ALLMSGLIST\";\nconst RX_FOCUSMSG = \"menu/RX_FOCUSMSG\";\nconst RX_REMOVE = \"menu/RX_REMOVE\";\nconst RX_FOCUSROOM = \"menu/RX_FOCUSROOM\";\nconst RX_LOADING1 = \"menu/RX_LOADING1\";\nconst RX_LOADING2 = \"menu/RX_LOADING2\";\nconst RX_LOADING3 = \"menu/RX_LOADING3\";\n\nconst RX_MSGLENGTH = \"menu/RX_MSGLENGTH\";\nconst RX_MSGLENGTH2 = \"menu/RX_MSGLENGTH2\";\n\n\n\nexport const rx_authenticated = (result) => ({\n  type: RX_AUTHENTICATED,\n  result,\n});\n\nexport const rx_all_users = (result) => ({\n  type: RX_ALL_USERS,\n  result,\n});\n\nexport const rx_me = (result) => ({\n  type: RX_ME,\n  result,\n});\n\nexport const rx_connected = (result) => ({\n  type: RX_CONNECTED,\n  result,\n});\n\nexport const rx_myroomlist = (result) => ({\n  type: RX_MYROOMLIST,\n  result,\n});\n\nexport const rx_allroomlist = (result) => ({\n  type: RX_ALLROOMLIST,\n  result,\n});\n\nexport const rx_allmsglist = (result) => ({\n  type: RX_ALLMSGLIST,\n  result,\n});\n\nexport const rx_focusmsg = (result) => ({\n  type: RX_FOCUSMSG,\n  result,\n});\n\nexport const rx_remove = (key) => ({\n  type: RX_REMOVE,\n  key,\n});\n\nexport const rx_focusroom = (result) => ({\n  type: RX_FOCUSROOM,\n  result,\n});\n\nexport const rx_loading1 = (result) => ({\n  type: RX_LOADING1,\n  result,\n});\nexport const rx_loading2 = (result) => ({\n  type: RX_LOADING2,\n  result,\n});\nexport const rx_loading3 = (result) => ({\n  type: RX_LOADING3,\n  result,\n});\n\nexport const rx_msglength = (result) => ({\n  type: RX_MSGLENGTH,\n  result,\n});\nexport const rx_msglength2 = (result) => ({\n  type: RX_MSGLENGTH2,\n  result,\n});\n\n\n\nconst initialState = {\n  authenticated: false,\n  all_users: [],\n  me: {},\n  all_connected: \"\",\n  myroomlist: [],\n  allroomlist: [],\n  allmsglist: [],\n  focusmsg: [],\n  focusroom: \"\",\n  loading1:false,\n  loading2:false,\n  loading3: false,\n  msglength: null,\n  msglength2: null,\n};\n\nfunction chats(state = initialState, action) {\n  switch (action.type) {\n    case RX_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: action.result,\n      };\n    case RX_ALL_USERS:\n      return {\n        ...state,\n        all_users: action.result,\n      };\n    case RX_ME:\n      return {\n        ...state,\n        me: action.result,\n      };\n    case RX_CONNECTED:\n      return {\n        ...state,\n        all_connected: action.result,\n      };\n    case RX_MYROOMLIST:\n      return {\n        ...state,\n        myroomlist: action.result,\n      };\n    case RX_ALLROOMLIST:\n      return {\n        ...state,\n        // item.name.push(all_users.filter((data) => data.uid === item.uid))\n        allroomlist: action.result,\n      };\n    case RX_ALLMSGLIST:\n      return {\n        ...state,\n        allmsglist: action.result,\n      };\n    case RX_FOCUSMSG:\n      return {\n        ...state,\n        focusmsg: action.result,\n      };\n    case RX_REMOVE:\n      return {\n        ...state,\n        focusmsg: state.focusmsg.filter((todo) => todo.key !== action.key),\n      };\n    case RX_FOCUSROOM:\n      return {\n        ...state,\n        focusroom: action.result,\n      };\n    case RX_LOADING1:\n      return {\n        ...state,\n        loading1: action.result,\n      };\n    case RX_LOADING2:\n      return {\n        ...state,\n        loading2: action.result,\n      };\n    case RX_LOADING3:\n      return {\n        ...state,\n        loading3: action.result,\n      };\n\n    case RX_MSGLENGTH:\n      return {\n        ...state,\n        msglength: action.result,\n      };\n    case RX_MSGLENGTH2:\n      return {\n        ...state,\n        msglength2: action.result,\n      };\n    \n    \n    default:\n      return state;\n  }\n}\n\nexport default chats;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAtKM1gMUkzx8Al9G5Y6jozCsTTezqmo4M\",\n  authDomain: \"dongtalk-82851.firebaseapp.com\",\n  databaseURL: \"https://dongtalk-82851-default-rtdb.firebaseio.com\",\n  projectId: \"dongtalk-82851\",\n  storageBucket: \"dongtalk-82851.appspot.com\",\n  messagingSenderId: \"63820293757\",\n  appId: \"1:63820293757:web:1d2960afd6d6ddf589b314\",\n  measurementId: \"G-E7K9VBW4D0\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const fire = firebase;\nexport const fireauth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const firedatabase = firebase.database();\n\n//const provider = new firebase.auth.GoogleAuthProvider();\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\n//provider.setCustomParameters({prompt: 'select_account'});\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\n\n// export default firebase;\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.\n","import { fire, fireauth, firedatabase } from \"../services/firebase\";\r\n\r\n//##########################################################\r\n//########### 로그인 여부를 판단해주는 함수(firebase) ################\r\n//##########################################################\r\nexport function CM_login_state(rx_authenticated) {\r\n  fireauth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      //로그인상태---\r\n      console.log(\"App/로그인\", user);\r\n      //#########################\r\n      connected(true);\r\n      rx_authenticated(true); //현재 로그인 여부 파악을 위한 값\r\n      //#########################\r\n    } else {\r\n      //로그아웃상태---\r\n      console.log(\"App/로그아웃\", user);\r\n      //#########################\r\n      connected(false);\r\n      rx_authenticated(false); //현재 로그인 여부 파악을 위한 값\r\n      //#########################\r\n    }\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 실시간 접속여부 관련된 함수들 ################\r\n//##########################################################\r\nexport function connected(authenticated) {\r\n  if (authenticated === true) {\r\n    var userUid = fireauth.currentUser.uid;\r\n    var myConnectionsRef = firedatabase.ref(`UsersConnection/${userUid}`);\r\n    var connectedRef = firedatabase.ref(\".info/connected\");\r\n    connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        console.log(\"connected\");\r\n        myConnectionsRef.set({\r\n          connection: true,\r\n          uid: userUid,\r\n        });\r\n      } else {\r\n        console.log(\"not connected\");\r\n        myConnectionsRef.set({\r\n          connection: false,\r\n          uid: userUid,\r\n        });\r\n      }\r\n    });\r\n    myConnectionsRef.onDisconnect().set({ connection: false, uid: userUid });\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 로그인 유지 (브라우져 닫으면 로그인 유지 풀림) ################\r\n//##########################################################\r\nexport function login_maintain(member) {\r\n  console.log(\"member\", member);\r\n  fireauth\r\n    .setPersistence(fire.auth.Auth.Persistence.SESSION)\r\n    .then(() => {\r\n      //로그인 유지 중\r\n      console.log(\"로그인 유지 중\");\r\n      return fireauth.signInWithEmailAndPassword(member.email, member.password);\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      console.log(\"로그인 유지 실패\");\r\n\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(\"errorCode\", errorCode);\r\n      console.log(\"errorMessage\", errorMessage);\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 유저 현재 접속 여부 확인을 위한 데이터 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_connectValue(rx_connected) {\r\n  //firebase 에서 connect 안의 데이터전부를 불러와서 리덕스(rx_connected)에 넣어주기\r\n  // console.log(\"fireauth.currentUser.uid\", fireauth.currentUser.uid);\r\n  firedatabase.ref(`UsersConnection`).on(\"value\", (snapshot) => {\r\n    console.log(\"sfajklas\", Object.values(snapshot.val()));\r\n    rx_connected(Object.values(snapshot.val())); //리덕스에도 넣어주기\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 유저 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_all_users(rx_all_users, rx_me, rx_loading1) {\r\n  firedatabase.ref(\"all_users\").on(\"value\", (snapshot) => {\r\n    let response = Object.values(snapshot.val());\r\n    rx_all_users(response); //리덕스에도 넣어주기\r\n    console.log(\"response\", response);\r\n\r\n    const me = response.filter((data) =>\r\n      data.uid.includes(fireauth.currentUser.uid)\r\n    );\r\n    rx_me(me); //리덕스에도 넣어주기\r\n    login_maintain(me[0]);\r\n    console.log(\"me\", me);\r\n    rx_loading1(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 전체 방 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allroomlist(rx_allroomlist, rx_myroomlist, rx_loading2) {\r\n  firedatabase.ref(\"room\").on(\"value\", (snapshot) => {\r\n    if (snapshot.val() !== null) {\r\n      let response = Object.values(snapshot.val());\r\n      console.log(\"roomListBox\", response);\r\n      rx_allroomlist(response);\r\n\r\n      const found = response.filter((element) =>\r\n        element.uid.some((item) => item === fireauth.currentUser.uid)\r\n      );\r\n      rx_myroomlist(found);\r\n      console.log(\"found\", found);\r\n    } else {\r\n      console.log(\"else\");\r\n      rx_allroomlist([]);\r\n      rx_myroomlist([]);\r\n    }\r\n    rx_loading2(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메세지 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allmsglist(rx_allmsglist, rx_loading3) {\r\n  firedatabase.ref(\"msg\").on(\"value\", (snapshot) => {\r\n    if (snapshot.val() !== null) {\r\n      let response = snapshot.val();\r\n      rx_allmsglist(response);\r\n    }\r\n    rx_loading3(false);\r\n  });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메시지 삭제(firebase) ################\r\n//##########################################################\r\nexport const removeChats = (room, key, rx_remove) => {\r\n  firedatabase.ref(`msg/${room}/${key}`).remove();\r\n  rx_remove(key); //리덕스 스토어 데이터에도 삭제된 키값을 전달해줘서 삭제시켜준다.\r\n  console.log(\"[메시지 삭제]removeChats\", room, key);\r\n}; //removeChats\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 메시지 서버로 보내기(firebase) ################\r\n//##########################################################\r\nexport function sendChat(msg, focusroom) {\r\n  if (focusroom !== \"\") {\r\n    var newPostKey = firedatabase.ref(`msg/${focusroom}`).push().key;\r\n\r\n    var postData = {\r\n      message: msg.message,\r\n      timestamp: msg.timestamp,\r\n      uid: msg.uid,\r\n      avatar: msg.avatar,\r\n      key: newPostKey,\r\n      name: msg.name,\r\n    };\r\n\r\n    var updates = {};\r\n    updates[`msg/${focusroom}/${newPostKey}`] = postData;\r\n    return firedatabase.ref().update(updates);\r\n  } else {\r\n    alert(\"방을 선택해주세요\");\r\n  }\r\n} //sendChat\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 이메일 로그인 함수 ################\r\n//##########################################################\r\nexport function signIn(member) {\r\n  return fireauth\r\n    .signInWithEmailAndPassword(member.email, member.password)\r\n    .then(() => {\r\n      //dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      console.log(\"signIn()로그인성공\");\r\n    })\r\n    .catch((err) => {\r\n      //dispatch({ type: \"LOGIN_ERROR\", err });\r\n      console.log(\"signIn()실패\");\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 회원가입 함수 ################\r\n//##########################################################\r\nexport function signUp(member) {\r\n  return fireauth\r\n    .createUserWithEmailAndPassword(member.email, member.password)\r\n    .then(() => {\r\n      console.log(\"signUp()가입성공\", member.email, member.password);\r\n      // 여기는 별도 회원 데이터 저장하기 위한 기능\r\n      var newPostKey = firedatabase.ref(\"all_users\").push().key;\r\n      var postData = {\r\n        email: member.email,\r\n        name: member.name,\r\n        password: member.password,\r\n        uid: fireauth.currentUser.uid,\r\n        avatar: member.avatar,\r\n        key: newPostKey,\r\n      };\r\n      var updates = {};\r\n      updates[\"/all_users/\" + newPostKey] = postData;\r\n      return firedatabase.ref().update(updates);\r\n      // //여기는 별도 회원 데이터 저장하기 위한 기능\r\n    })\r\n    .catch((error) => {\r\n      alert(\r\n        error.message ===\r\n          \"The email address is already in use by another account.\" &&\r\n          \"이미 있는 아이디입니다.\"\r\n      );\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 로그아웃 ################\r\n//##########################################################\r\nexport function CM_logout() {\r\n  firedatabase.ref(`UsersConnection/${fireauth.currentUser.uid}`).set({\r\n    connection: false,\r\n    uid: fireauth.currentUser.uid,\r\n  });\r\n  return fireauth\r\n    .signOut()\r\n    .then(() => {\r\n      // Sign-out successful.\r\n      console.log(\"로그아웃 성공\");\r\n    })\r\n    .catch((error) => {\r\n      // An error happened.\r\n      console.log(\"로그아웃 실패\");\r\n    });\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 내 룸 개설 ################\r\n//##########################################################\r\nexport function CM_Roomadd(me, you, allroomlist) {\r\n  const data = [me.uid, you];\r\n  const clone_data = [me.uid, you].sort();\r\n  console.log(\"handleFriend\", data[0], data[1]);\r\n\r\n  console.log(allroomlist);\r\n  let clone_allroomlist = JSON.parse(JSON.stringify(allroomlist));\r\n  clone_allroomlist = clone_allroomlist.some(\r\n    (element) =>\r\n      JSON.stringify(element.uid.sort()) === JSON.stringify(clone_data)\r\n  );\r\n\r\n  if (!clone_allroomlist) {\r\n    var newPostKey = firedatabase.ref(\"room\").push().key;\r\n    var postData = {\r\n      uid: [me.uid, you],\r\n      name: [],\r\n      avatar: me.avatar,\r\n      msg_key: newPostKey,\r\n    };\r\n    var updates = {};\r\n    updates[\"/room/\" + newPostKey] = postData;\r\n    return firedatabase.ref().update(updates);\r\n  } else {\r\n    alert(\"이미 방이 존재합니다.\");\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 내 룸 리스트 삭제 ################\r\n//##########################################################\r\nexport const CM_removeRooms = (\r\n  key,\r\n  me,\r\n  rx_focusroom,\r\n  rx_focusmsg,\r\n  all_users\r\n) => {\r\n  var mePassword = prompt(\"본인의 비밀번호를 입력하세요\");\r\n  if (me.password === mePassword) {\r\n    firedatabase.ref(`room/${key}`).remove();\r\n    firedatabase.ref(`msg/${key}`).remove();\r\n    firedatabase.ref(`msgLength/${key}`).remove();\r\n    all_users.map((item) =>\r\n      firedatabase.ref(`msgLength2/${item.uid}/${key}`).remove()\r\n    );\r\n\r\n    rx_focusroom(\"\");\r\n    rx_focusmsg([]);\r\n    alert(\"삭제가 완료되었습니다.\");\r\n  } else {\r\n    alert(\"비밀번호가 틀려서 삭제 불가합니다\");\r\n  }\r\n};\r\n//##########################################################\r\n\r\n//##########################################################\r\n//########### 실시간 접속 여부를 화면단에 뿌려줄때 사용 ################\r\n//##########################################################\r\nexport function CM_me_connected(all_connected, uid) {\r\n  //실제 화면단 포문 도는곳에\r\n  //all_connected:리덕스의 all_connected 를 넣어주고\r\n  //uid:리덕의 all_users가 포문 돌면서 하나하나 접근할때 있는 uid값\r\n  if (all_connected !== \"\") {\r\n    // console.log(\"######################################\");\r\n    // console.log(\"all_connected\", all_connected);\r\n    // console.log(\"uid\", uid);\r\n    const found = all_connected.filter((element) => element.uid === uid);\r\n    // console.log(\r\n    //   \"foundfoundfoundfoundfoundfoundfoundfoundfoundfoundfoundfound\",\r\n    //   found\r\n    // );\r\n    return found.length > 0 && found[0].connection;\r\n  }\r\n}\r\n//##########################################################\r\n\r\n//구글 로그인 기능(사용안함 중)\r\nexport function signInWithGoogle() {\r\n  const provider = new fire.auth.GoogleAuthProvider();\r\n  // provider.setCustomParameters({ prompt: 'select_account' });\r\n  return fireauth.signInWithPopup(provider);\r\n}\r\n\r\n//##########################################################\r\n//########### 룸 갯수만큼 포문돌려서 각룸 몇개의 메시지인지 초기에 확인하는 기능 ################\r\n//##########################################################\r\nexport function CM_msgLength(allmsglist, allroomlist, rx_msglength) {\r\n  console.log(\"CM_msgLength\");\r\n\r\n  //룸 갯수만큼 포문돌려서 데이터를 객체로 만들어준다.\r\n  let msg_length = {};\r\n  allroomlist.map((item, index) => {\r\n    return (msg_length[item.msg_key] = allmsglist[item.msg_key]\r\n      ? Object.values(allmsglist[item.msg_key]).length\r\n      : 0);\r\n  });\r\n  //위에서 만든 데이터를 firedatabase 에 보내 서버에 저장해준다.\r\n  firedatabase.ref(`msgLength/`).set(msg_length, (error) => {\r\n    if (error) {\r\n      // The write failed...\r\n      console.log(\"The write failed...\");\r\n    } else {\r\n      // Data saved successfully!\r\n      console.log(\"Data saved successfully!\");\r\n      //리덕스에도 넣어주기\r\n      rx_msglength(msg_length);\r\n    }\r\n  });\r\n}\r\n\r\n//##########################################################\r\n//########### 또다른 룸갯수 확인(확인전까진 위의 기능보다 낮은 숫자이다가 확인하는순간 위의기능 숫자와 동일하게 만들어줌) ################\r\n//##########################################################\r\nexport function CM_my_msgLength(allroomlist, rx_msglength2, all_users) {\r\n  console.log(\"CM_my_msgLength 실행\");\r\n  //allroomlist=룸리스트데이터\r\n  //rx_msglength2=\r\n  //all_users=전체 회원 데이터\r\n\r\n  firedatabase\r\n    .ref(`My_msgLength2`)\r\n    .once(\"value\")\r\n    .then((snapshot) => {\r\n      let response = snapshot.val();\r\n      if (response) {\r\n        let clone_response = JSON.parse(JSON.stringify(response));\r\n        all_users.map((item) =>\r\n          allroomlist.map(\r\n            (item2) =>\r\n              !response[item.uid][item2.msg_key] && (clone_response[item.uid][item2.msg_key] = 0)\r\n          )\r\n        );\r\n        \r\n        firedatabase.ref(`My_msgLength2/`).set(clone_response);\r\n      \r\n        // all_users.map((item) =>\r\n        //   allroomlist.map(\r\n        //     (item2,index) =>\r\n        //       !response[item.uid][item2.msg_key] &&\r\n        //       firedatabase\r\n        //         .ref(`My_msgLength2/${item.uid}/${item2.msg_key}`)\r\n        //         .set(index)\r\n        //   )\r\n        // );\r\n      } else {\r\n        all_users.map((item) =>\r\n          allroomlist.map((item2) =>\r\n            firedatabase\r\n              .ref(`My_msgLength2/${item.uid}`)\r\n              .update({ [item2.msg_key]: 0 })\r\n          )\r\n        );\r\n      }\r\n\r\n      firedatabase\r\n        .ref(`My_msgLength2`)\r\n        .once(\"value\")\r\n        .then((snapshot) => {\r\n          let response = snapshot.val();\r\n\r\n          rx_msglength2(response);\r\n        });\r\n    });\r\n}\r\n\r\nexport function CM_my_msgLength_change(msg_key, rx_msglength2) {\r\n  if (msg_key) {\r\n    console.log(\"CM_my_msgLength_change\");\r\n    console.log(\"uid\", fireauth.currentUser.uid);\r\n    console.log(\"msg_key\", msg_key);\r\n\r\n    firedatabase\r\n      .ref(`msgLength/${msg_key}`)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        let response = snapshot.val();\r\n        console.log(response);\r\n        firedatabase\r\n          .ref(`My_msgLength2/${fireauth.currentUser.uid}/${msg_key}`)\r\n          .set(response);\r\n\r\n        firedatabase\r\n          .ref(`My_msgLength2`)\r\n          .once(\"value\")\r\n          .then((snapshot) => {\r\n            let response = snapshot.val();\r\n\r\n            rx_msglength2(response);\r\n          });\r\n      });\r\n  }\r\n}\r\n//##########################################################\r\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nexport default PublicRoute;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signUp } from \"../helpers/common\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormLabel\n} from \"@material-ui/core\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Button component={Link} to=\"https://material-ui.com/\">\n        Your Website\n      </Button>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp() {\n  const classes = useStyles();\n  const [member, setMember] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    avatar:\"\",\n  });\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setMember({ ...member, [name]: value });\n  };\nconsole.log(member)\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (member.email !== \"\" && member.password !== \"\" && member.name !== \"\") {\n      signUp(member);\n    }\n  };\n\nfunction validateEmail(email){\n    var emailReg = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n  return email.length > 0 ? emailReg.test(email) : true;\n}\nfunction validateName(name){\n    var nameReg = new RegExp(/[ㄱ-ㅎㅏ-ㅣ가-힣]/g);\n  return name.length > 0 ? nameReg.test(name) : true;\n}\nfunction validatePassword(password){\n    var passwordReg = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/);\n  return password.length > 0 ? passwordReg.test(password) : true;\n}\n\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          회원 가입\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={member.email}\n                onChange={handleOnChange}\n                error={!validateEmail(member.email)}\n                helperText={ !validateEmail(member.email) && 'emali 형식에 맞게 입력해주세요.' }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                value={member.name}\n                onChange={handleOnChange}\n                error={!validateName(member.name)}\n                helperText={ !validateName(member.name) && '한글만 입력해주세요.' }\n\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={member.password}\n                onChange={handleOnChange}\n                error={!validatePassword(member.password)}\n                helperText={!validatePassword(member.password) && 'password는 최소 8 자, 최소 하나의 문자 및 하나의 숫자' }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div>\n                <FormLabel component=\"legend\">Avatar</FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"avatar\" value={member.avatar} onChange={handleOnChange} style={{ display:'flex',flexDirection:'row',justifyContent:'center' }}>\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/1.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />} />\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/2.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/2.jpg\" />} />\n                  <FormControlLabel value=\"https://material-ui.com/static/images/avatar/3.jpg\" control={<Radio />} label={<Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/3.jpg\" />} />\n                </RadioGroup>\n              </div>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            가입하기\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              이미 회원이신가?{\" \"}\n              <Button component={Link} to=\"/login\">\n                로그인\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignUp\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { signIn } from \"../helpers/common\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  CssBaseline,\n  Container,\n} from \"@material-ui/core\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Button component={Link} to=\"https://material-ui.com/\">\n        Your Website\n      </Button>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login() {\n  const classes = useStyles();\n  const [member, setMember] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setMember({ ...member, [name]: value });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (member.email !== \"\" && member.password !== \"\") {\n      signIn(member);\n    }\n  };\n\nfunction validateEmail(email){\n    var emailReg = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n  return email.length > 0 ? emailReg.test(email) : true;\n}\n// function validatePassword(password){\n//     var passwordReg = new RegExp(\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\");\n//   return password.length > 0 ? passwordReg.test(password) : true;\n// }\n\n\n  // const handleGoogleSignIn = async () => {\n  //   try {\n  //     await signInWithGoogle();\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          로그인\n        </Typography>\n        <form className={classes.form} onSubmit={handleOnSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"이메일을 입력하세요.\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={member.email}\n            onChange={handleOnChange}\n            error={!validateEmail(member.email)}\n            helperText={ !validateEmail(member.email) && 'emali 제대로 입력해주세요.' }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={member.password}\n            onChange={handleOnChange}\n            error={false}\n            helperText={false && 'password는 최소 8 자, 최소 하나의 문자 및 하나의 숫자' }\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          {/* <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleGoogleSignIn}\n            className={classes.submit}\n          >\n            구글 로그인\n          </Button> */}\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n            </Grid>\n            <Grid item>\n              <Button component={Link} to=\"/signup\">\n                {\"회원가입\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { CM_removeRooms } from \"../helpers/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { fireauth } from \"../services/firebase\";\r\n\r\nimport { rx_focusroom, rx_focusmsg } from \"../modules/chats\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst FriendItem = ({\r\n  text,\r\n  sub,\r\n  uid,\r\n  avatar,\r\n  msg_key,\r\n  me,\r\n  invisible,\r\n  event,\r\n  rx_focusroom,\r\n  rx_focusmsg,\r\n  all_users,\r\n  msglength,\r\n  msglength2,\r\n}) => {\r\n\r\n\r\n  const hello = (msg_key) => {\r\n    if (msglength && msglength2) {\r\n    //console.log('갯수구하기0',msg_key)\r\n      if (Object.values(msglength).length === Object.values(msglength2[fireauth.currentUser.uid]).length) {\r\n        if (msglength[msg_key] !== undefined && msglength2[fireauth.currentUser.uid][msg_key] !== undefined ) {\r\n          console.log('갯수구하기',msglength[msg_key] && msglength[msg_key])\r\n          console.log('갯수구하기2', msglength2[fireauth.currentUser.uid][msg_key] && msglength2[fireauth.currentUser.uid][msg_key])\r\n          return msglength && msglength2 && msglength[msg_key] - msglength2[fireauth.currentUser.uid][msg_key];\r\n        }\r\n\r\n       //return msglength && msglength2 && msglength[msg_key] - msglength2[fireauth.currentUser.uid][msg_key];\r\n      }\r\n\r\n    //   console.log('갯수구하기', msglength[msg_key])\r\n    // console.log('갯수구하기2',msglength2[fireauth.currentUser.uid][msg_key])\r\n     }\r\n    //return msglength && msglength2 && msglength[msg_key] - msglength2[fireauth.currentUser.uid][msg_key];\r\n  }\r\n\r\n  return (\r\n    <li style={{ display: msg_key ? \"flex\" : \"block\" }}>\r\n      <ListItem button onClick={() => (msg_key ? event(msg_key) : event(uid))}>\r\n        <ListItemAvatar>\r\n          <Badge color=\"secondary\" badgeContent={msg_key ? hello(msg_key) : 0}>\r\n            <StyledBadge\r\n              invisible={invisible}\r\n              overlap=\"circular\"\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n              }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt=\"Remy Sharp\" src={avatar} />\r\n            </StyledBadge>\r\n          </Badge>\r\n          {/* <Avatar>\r\n                  <BeachAccessIcon />\r\n                </Avatar> */}\r\n        </ListItemAvatar>\r\n        <ListItemText primary={text} secondary={sub} />\r\n      </ListItem>\r\n      {msg_key && (\r\n        <Button\r\n          onClick={() => CM_removeRooms(msg_key, me, rx_focusroom, rx_focusmsg, all_users)}\r\n        >\r\n          삭제\r\n        </Button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  msglength: state.chats.msglength,\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendItem);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FriendItem from \"./FriendItem\";\r\n\r\nimport { Box, List, CircularProgress  } from \"@material-ui/core\";\r\n\r\nimport { CM_me_connected } from \"../helpers/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  list: {\r\n    height: \"240px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  divider: {\r\n    // margin: '20px 0',\r\n  },\r\n}));\r\n\r\nconst FriendList = ({ title, data, event, all_users, all_connected, me, loading }) => {\r\n  const classes = useStyles();\r\n\r\n  function uid_name(names) {\r\n    return (\r\n      names !== undefined &&\r\n      all_users.length > 0 &&\r\n      all_users.filter((data) => data.uid === names)[0].name\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]FriendList.js\");\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <ListSubheader>{title}</ListSubheader>\r\n\r\n      <List className={classes.list}>\r\n        {loading &&\r\n          <Box style={{\r\n          position: 'absolute',\r\n          top: '0',\r\n          left: '0',\r\n          width:'100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n          }}>\r\n            <CircularProgress color=\"secondary\" />\r\n          </Box>\r\n        }\r\n        \r\n        {data.length > 0 ? (\r\n          data.map((data, index) => (\r\n            <FriendItem\r\n              key={index}\r\n              invisible={!CM_me_connected(all_connected, data.uid)}\r\n              text={\r\n                Array.isArray(data.uid)\r\n                  ? data.uid.map((item, index) =>\r\n                      index > 0 ? `/${uid_name(item)}` : uid_name(item)\r\n                    )\r\n                  : uid_name(data.uid)\r\n              }\r\n              sub={data.email === undefined ? \"1:1 대화방\" : data.email}\r\n              uid={data.uid}\r\n              avatar={data.avatar}\r\n              msg_key={data.msg_key}\r\n              me={me}\r\n              event={event}\r\n            />\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n\r\n      {/* <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n          </List>\r\n          \r\n          <Divider className={classes.divider} />\r\n          <ListSubheader>나의 방 리스트</ListSubheader>\r\n          <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n          </List> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  all_connected: state.chats.all_connected,\r\n  me: state.chats.me[0],\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   rx_focusroom: (val) => {\r\n//     dispatch(rx_focusroom(val));\r\n//   },\r\n// });\r\n\r\nexport default connect(mapStateToProps, null)(FriendList);\r\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { firedatabase } from \"../services/firebase\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { connect } from \"react-redux\";\n\nimport { blue } from \"@material-ui/core/colors\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open, data, focusroom } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    console.log(\"까르르르궁\", data);\n  };\n\n  const handleListItemClick = (uid) => {\n    firedatabase.ref(`room/${focusroom}/uid`).once('value').then((snapshot) => {\n      const f_add = snapshot.val();\n  \n      if (!f_add.includes(uid)) {\n        //중복 친구가 없는경우 추가\n        f_add.push(uid);\n        firedatabase.ref(`room/${focusroom}`)\n          .update({\n            uid:f_add\n          })\n          .then(() => {\n            console.log('친추 완료', f_add);\n          })\n          .catch((error) => {\n            console.log('친추 실패');\n          });\n      } else {\n        //중복 친구가 있는경우 알럿 노출\n        alert('이미 추가된 친구입니다.');\n      };\n    });\n    onClose(false);\n  };\n  \n  console.log(\"까르르르궁\", data);\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {data.length > 0 ? (\n          data.map((item, index) => (\n            <ListItem\n              button\n              onClick={() => handleListItemClick(item.uid)}\n              key={index}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.email} />\n            </ListItem>\n          ))\n        ) : (\n          <li>리스트가없습니다.</li>\n        )}\n      </List>\n    </Dialog>\n  );\n}\n\n// SimpleDialog.propTypes = {\n//   onClose: PropTypes.func.isRequired,\n//   open: PropTypes.bool.isRequired,\n//   selectedValue: PropTypes.string.isRequired,\n// };\n\nconst FriendAdd = ({ all_users,focusroom }) => {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        친구추가\n      </Button>\n      <SimpleDialog\n        data={all_users}\n        focusroom={focusroom}\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  all_users: state.chats.all_users,\n  // myroomlist: state.chats.myroomlist,\n  // allroomlist: state.chats.allroomlist,\n  // me: state.chats.me[0],\n  focusroom: state.chats.focusroom,\n});\n\n//   const mapDispatchToProps = (dispatch) => ({\n//     rx_all_users: (val) => {\n//       dispatch(rx_all_users(val));\n//     },\n//     rx_me: (val) => {\n//       dispatch(rx_me(val));\n//     },\n//     rx_myroomlist: (val) => {\n//       dispatch(rx_myroomlist(val));\n//     },\n//     rx_allroomlist: (val) => {\n//       dispatch(rx_allroomlist(val));\n//     },\n//     rx_focusroom: (val) => {\n//       dispatch(rx_focusroom(val));\n//     },\n//     rx_msglist: (val) => {\n//       dispatch(rx_msglist(val));\n//     },\n//   });\n\nexport default connect(mapStateToProps, null)(FriendAdd);\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { rx_remove } from \"../modules/chats\";\r\nimport { fireauth } from \"../services/firebase\";\r\n\r\nimport * as dateFns from \"date-fns\";\r\nimport { removeChats } from \"../helpers/common\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport FriendAdd from \"./FriendAdd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  lBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  rBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    \"& input,& button\": {\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n    },\r\n  },\r\n\r\n  listBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  listBoxItem: {\r\n    display: 'block',\r\n  },\r\n  listBoxItemavatar: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst Message = ({ focusmsg ,focusroom, rx_remove, loading }) => {\r\n  const classes = useStyles();\r\n  console.log(\"Message-focusroom\", focusroom);\r\n  const intervalId = useRef(null);\r\n\r\n\r\n\r\n\r\nfunction scrollToMyRef (){\r\n    const scroll =\r\n      intervalId.current.scrollHeight -\r\n      intervalId.current.clientHeight;\r\n    intervalId.current.scrollTo(0, scroll);\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Message.js\");\r\n    scrollToMyRef();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [focusmsg, focusroom]);\r\n\r\n  return (\r\n    <Box style={{ height: \"577px\", overflowY: \"scroll\", paddingBottom: \"15%\" }} ref={intervalId}>\r\n        {loading &&\r\n          <Box style={{\r\n          position: 'absolute',\r\n          top: '0',\r\n          left: '0',\r\n          width:'100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n          }}>\r\n            <CircularProgress color=\"secondary\" />\r\n          </Box>\r\n        }\r\n      <ListSubheader style={{ display:'flex',justifyContent:'space-between',backgroundColor:'#fff' }}>\r\n        채팅방\r\n        {focusroom !== \"\" &&\r\n          <FriendAdd />\r\n        }\r\n      </ListSubheader>\r\n      <List className={classes.listBox}>\r\n        {focusmsg.length > 0 ? (\r\n          focusmsg.map((data, index) => (\r\n            <ListItem key={index} className={classes.listBoxItem}>\r\n                <Box\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection:\r\n                      fireauth.currentUser.uid === data.uid\r\n                        ? \"row-reverse\"\r\n                        : \"row\",\r\n                    textAlign:\r\n                      fireauth.currentUser.uid === data.uid ? \"right\" : \"left\",\r\n                  }}\r\n                >\r\n              <ListItemAvatar\r\n                className={classes.listBoxItemavatar}\r\n                style={{\r\n                  justifyContent: fireauth.currentUser.uid === data.uid ? \"flex-end\" : \"flex-start\",\r\n                }}\r\n              >\r\n                <Avatar alt=\"Remy Sharp\" src={data.avatar} />\r\n              </ListItemAvatar>\r\n\r\n              <ListItemText\r\n                primary={data.name}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      color=\"textPrimary\"\r\n                      style={{ wordBreak: \"break-all\" }}\r\n                    >\r\n                      {data.message}\r\n                    </Typography>\r\n                    <br />\r\n                    {dateFns.format(data.timestamp, \"yyyy-MM-dd-HH-mm-ss\")}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              <Button\r\n                  style={{\r\n                    display:\r\n                      fireauth.currentUser.uid !== data.uid\r\n                        ? \"none\"\r\n                        : \"inline-flex\",\r\n                  }}\r\n                onClick={() => removeChats(focusroom, data.key, rx_remove)}\r\n              >\r\n                삭제\r\n                </Button>\r\n                </Box>\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_remove: (val) => {\r\n    dispatch(rx_remove(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fireauth } from \"../services/firebase\";\r\nimport { sendChat, CM_my_msgLength_change } from \"../helpers/common\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Box, Button, TextField } from \"@material-ui/core\";\r\n\r\nimport { rx_msglength2 } from \"../modules/chats\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  InputBox: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    width: \"93%\",\r\n    margin: \"2%\",\r\n    padding: \"2%\",\r\n    boxShadow: \"1px 1px 5px #a0a0a0\",\r\n    borderRadius: \"5px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InputBox = ({ focusroom, me, rx_msglength2 }) => {\r\n  const classes = useStyles();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    sendChat(\r\n      {\r\n        message: msg,\r\n        timestamp: Date.now(),\r\n        uid: fireauth.currentUser.uid,\r\n        avatar: me.avatar,\r\n        name:\r\n          fireauth.currentUser.displayName === null\r\n            ? me.name\r\n            : fireauth.currentUser.displayName,\r\n      },\r\n      focusroom\r\n    );\r\n    CM_my_msgLength_change(focusroom, rx_msglength2);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumbit}>\r\n      <Box className={classes.InputBox}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"메시지\"\r\n          value={msg}\r\n          onChange={handleOnChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          endIcon={<SendIcon />}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n  me: state.chats.me[0],\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_msglength2: (val) => {\r\n    dispatch(rx_msglength2(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputBox);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CM_all_users,\r\n  CM_allroomlist,\r\n  CM_allmsglist,\r\n  CM_Roomadd,\r\n  login_maintain,\r\n  CM_connectValue,\r\n  CM_msgLength,\r\n  CM_my_msgLength,\r\n  CM_my_msgLength_change,\r\n} from \"../helpers/common\";\r\n\r\nimport {\r\n  rx_all_users,\r\n  rx_me,\r\n  rx_myroomlist,\r\n  rx_allroomlist,\r\n  rx_focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  rx_focusmsg,\r\n  rx_loading1,\r\n  rx_loading2,\r\n  rx_loading3,\r\n  rx_msglength,\r\n  rx_msglength2,\r\n} from \"../modules/chats\";\r\n\r\nimport {\r\n  CssBaseline,\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport FriendList from \"../components/FriendList\";\r\nimport Message from \"../components/Message\";\r\nimport InputBox from \"../components/InputBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //height:'450px'\r\n  },\r\n  chat_wrap: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"577px\",\r\n  },\r\n}));\r\n\r\nconst Chat = ({\r\n  rx_all_users,\r\n  all_users,\r\n  rx_me,\r\n  me,\r\n  rx_myroomlist,\r\n  myroomlist,\r\n  rx_allroomlist,\r\n  allroomlist,\r\n  rx_focusroom,\r\n  focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  allmsglist,\r\n  rx_focusmsg,\r\n  focusmsg,\r\n  rx_loading1,\r\n  rx_loading2,\r\n  rx_loading3,\r\n  loading1,\r\n  loading2,\r\n  loading3,\r\n  rx_msglength,\r\n  rx_msglength2,\r\n  msglength,\r\n  msglength2,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleFriend = (you) => {\r\n    CM_Roomadd(me, you, allroomlist);\r\n  };\r\n\r\n  const handleRoom = (msg_key) => {\r\n    console.log(\"handleRoom\");\r\n    rx_focusroom(msg_key);\r\n    CM_my_msgLength_change(msg_key, rx_msglength2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Chat.js\");\r\n    CM_connectValue(rx_connected);\r\n    rx_loading1(true);\r\n    rx_loading2(true);\r\n    rx_loading3(true);\r\n    CM_all_users(rx_all_users, rx_me, rx_loading1);\r\n    CM_allroomlist(rx_allroomlist, rx_myroomlist, rx_loading2);\r\n    CM_allmsglist(rx_allmsglist, rx_loading3);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    allmsglist[focusroom]\r\n      ? rx_focusmsg(Object.values(allmsglist[focusroom]))\r\n      : rx_focusmsg([]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allmsglist, focusroom]);\r\n\r\n  useEffect(() => {\r\n    if (allroomlist.length > 0) {\r\n      CM_msgLength(allmsglist, allroomlist, rx_msglength);\r\n      console.log(\"초기 메시지 갯수 세팅\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allroomlist, allmsglist]);\r\n\r\n  useEffect(() => {\r\n    if (allroomlist.length > 0) {\r\n      CM_my_msgLength(allroomlist, rx_msglength2, all_users);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allroomlist]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\" className={classes.root}>\r\n        <Paper className={classes.chat_wrap} elevation={1}>\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={12} sm={4} className={classes.sectionDesktop}>\r\n              <FriendList\r\n                title=\"전체 친구 리스트\"\r\n                data={all_users}\r\n                loading={loading1}\r\n                event={handleFriend}\r\n              />\r\n              <Divider />\r\n              <FriendList\r\n                title=\"나의 방 리스트\"\r\n                data={myroomlist}\r\n                loading={loading2}\r\n                event={handleRoom}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} style={{ position: \"relative\" }}>\r\n              <Message focusmsg={focusmsg} loading={loading3} />\r\n              <InputBox />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nChat.propTypes = {\r\n  rx_all_users: PropTypes.func,\r\n  all_users: PropTypes.array,\r\n  rx_me: PropTypes.func,\r\n  me: PropTypes.object,\r\n  rx_myroomlist: PropTypes.func,\r\n  myroomlist: PropTypes.array,\r\n  rx_allroomlist: PropTypes.func,\r\n  allroomlist: PropTypes.array,\r\n  rx_focusroom: PropTypes.func,\r\n  focusroom: PropTypes.string,\r\n  rx_allmsglist: PropTypes.func,\r\n  rx_connected: PropTypes.func,\r\n  allmsglist: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  rx_focusmsg: PropTypes.func,\r\n  focusmsg: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  myroomlist: state.chats.myroomlist,\r\n  allroomlist: state.chats.allroomlist,\r\n  me: state.chats.me[0],\r\n  focusroom: state.chats.focusroom,\r\n  allmsglist: state.chats.allmsglist,\r\n  focusmsg: state.chats.focusmsg,\r\n  loading1: state.chats.loading1,\r\n  loading2: state.chats.loading2,\r\n  loading3: state.chats.loading3,\r\n  msglength: state.chats.msglength,\r\n  msglength2: state.chats.msglength2,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_all_users: (val) => {\r\n    dispatch(rx_all_users(val));\r\n  },\r\n  rx_me: (val) => {\r\n    dispatch(rx_me(val));\r\n  },\r\n  rx_myroomlist: (val) => {\r\n    dispatch(rx_myroomlist(val));\r\n  },\r\n  rx_allroomlist: (val) => {\r\n    dispatch(rx_allroomlist(val));\r\n  },\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_allmsglist: (val) => {\r\n    dispatch(rx_allmsglist(val));\r\n  },\r\n  rx_connected: (val) => {\r\n    dispatch(rx_connected(val));\r\n  },\r\n  login_maintain: (val) => {\r\n    dispatch(login_maintain(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  },\r\n  rx_loading1: (val) => {\r\n    dispatch(rx_loading1(val));\r\n  },\r\n  rx_loading2: (val) => {\r\n    dispatch(rx_loading2(val));\r\n  },\r\n  rx_loading3: (val) => {\r\n    dispatch(rx_loading3(val));\r\n  },\r\n  rx_msglength: (val) => {\r\n    dispatch(rx_msglength(val));\r\n  },\r\n  rx_msglength2: (val) => {\r\n    dispatch(rx_msglength2(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HashRouter, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { rx_authenticated } from \"./modules/chats\";\nimport { CM_logout } from \"./helpers/common\";\nimport { CM_login_state } from \"./helpers/common\";\n\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport SignUp from \"./containers/SignUp\";\nimport Login from \"./containers/Login\";\nimport Chat from \"./containers/Chat\";\n\nfunction App({ rx_authenticated, authenticated, me }) {\n  useEffect(() => {\n    console.log(\"[표시]App.js\");\n    CM_login_state(rx_authenticated);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <HashRouter>\n      <Switch>\n        <PrivateRoute\n          path=\"/chat\"\n          authenticated={authenticated}\n          component={Chat}\n        />\n        <PublicRoute\n          path=\"/signup\"\n          authenticated={authenticated}\n          component={SignUp}\n        />\n        <PublicRoute\n          path={[\"/\", \"/login\"]}\n          authenticated={authenticated}\n          component={Login}\n        />\n      </Switch>\n      {authenticated &&\n        <button\n          onClick={() => {\n            // connectCheck(false);\n            CM_logout();\n          }}\n        >\n        로그아웃({ me && me.name })\n        </button>\n      }\n    </HashRouter>\n  );\n}\n\n\nApp.propTypes = {\n  rx_authenticated: PropTypes.func,\n  authenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.chats.authenticated,\n  me: state.chats.me[0],\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  rx_authenticated: (val) => {\n    dispatch(rx_authenticated(val));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport chats from \"./chats\";\n// import auth from \"./auth\";\n\nconst rootReducer = combineReducers({\n  chats,\n  // auth,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport rootReducer from \"./modules\";\nimport { createLogger } from \"redux-logger\";\n\nconst logger = createLogger();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}