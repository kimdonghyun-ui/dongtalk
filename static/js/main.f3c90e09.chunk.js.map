{"version":3,"sources":["modules/chats.js","services/firebase.js","helpers/databox.js","helpers/common.js","components/PublicRoute.js","components/PrivateRoute.js","containers/SignUp.js","containers/Login.js","components/FriendItem.js","components/FriendList.js","components/FriendAdd.js","components/Message.js","components/InputBox.js","containers/Chat.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["RX_AUTHENTICATED","RX_ALL_USERS","RX_ME","RX_CONNECTED","RX_MYROOMLIST","RX_ALLROOMLIST","RX_ALLMSGLIST","RX_FOCUSMSG","RX_REMOVE","RX_FOCUSROOM","rx_focusmsg","result","type","rx_focusroom","initialState","authenticated","all_users","me","all_connected","myroomlist","allroomlist","allmsglist","focusmsg","focusroom","chats","state","action","filter","todo","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fire","fireauth","auth","firedatabase","firestore","database","signUp","member","createUserWithEmailAndPassword","email","password","then","console","log","newPostKey","ref","push","postData","name","uid","currentUser","updates","update","catch","error","alert","message","signIn","signInWithEmailAndPassword","err","me_connected","found","element","length","connection","connected","userUid","myConnectionsRef","on","snap","val","set","onDisconnect","login_maintain","setPersistence","Auth","Persistence","SESSION","errorCode","code","errorMessage","sendChat","msg","timestamp","PublicRoute","Component","component","rest","render","props","to","PrivateRoute","pathname","from","location","Copyright","Typography","variant","color","align","Button","Link","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","setMember","handleOnChange","e","target","value","handleOnSubmit","a","preventDefault","Container","maxWidth","CssBaseline","className","Avatar","noValidate","onSubmit","Grid","container","item","xs","TextField","required","fullWidth","id","label","autoComplete","onChange","justifyContent","Box","mt","Login","autoFocus","StyledBadge","withStyles","badge","boxShadow","background","position","top","left","height","borderRadius","animation","border","content","transform","opacity","Badge","connect","dispatch","img","text","sub","msg_key","invisible","event","style","ListItem","button","onClick","ListItemAvatar","overlap","anchorOrigin","vertical","horizontal","alt","src","ListItemText","primary","rx_msglist","mePassword","prompt","remove","removeRooms","root","list","overflowY","divider","title","data","uid_name","names","undefined","useEffect","ListSubheader","List","map","index","Array","isArray","emails","blue","SimpleDialog","onClose","selectedValue","open","Dialog","aria-labelledby","DialogTitle","once","snapshot","f_add","includes","React","setOpen","setSelectedValue","lBox","textAlign","rBox","appBar","bottom","listBox","listBoxItem","listBoxItemavatar","rx_remove","intervalId","useRef","scroll","current","scrollHeight","clientHeight","scrollTo","scrollToMyRef","paddingBottom","Fragment","wordBreak","dateFns","room","removeChats","InputBox","padding","setMsg","handleSumbit","now","displayName","endIcon","chat_wrap","rx_all_users","rx_me","rx_myroomlist","rx_allroomlist","rx_allmsglist","rx_connected","Object","values","CM_connectValue","response","CM_all_users","some","CM_allroomlist","CM_allmsglist","Paper","elevation","sm","sectionDesktop","you","clone_data","sort","clone_allroomlist","JSON","parse","stringify","Divider","rx_authenticated","onAuthStateChanged","user","CM_login_state","path","Chat","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","logger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f3c90e09.chunk.js","sourcesContent":["const RX_AUTHENTICATED = \"menu/RX_AUTHENTICATED\";\nconst RX_ALL_USERS = \"menu/RX_ALL_USERS\";\nconst RX_ME = \"menu/RX_ME\";\nconst RX_CONNECTED = \"menu/RX_CONNECTED\";\nconst RX_MYROOMLIST = \"menu/RX_MYROOMLIST\";\nconst RX_ALLROOMLIST = \"menu/RX_ALLROOMLIST\";\nconst RX_ALLMSGLIST = \"menu/RX_ALLMSGLIST\";\nconst RX_FOCUSMSG = \"menu/RX_FOCUSMSG\";\nconst RX_REMOVE = \"menu/RX_REMOVE\";\nconst RX_FOCUSROOM = \"menu/RX_FOCUSROOM\";\n\nexport const rx_authenticated = (result) => ({\n  type: RX_AUTHENTICATED,\n  result,\n});\n\nexport const rx_all_users = (result) => ({\n  type: RX_ALL_USERS,\n  result,\n});\n\nexport const rx_me = (result) => ({\n  type: RX_ME,\n  result,\n});\n\nexport const rx_connected = (result) => ({\n  type: RX_CONNECTED,\n  result,\n});\n\nexport const rx_myroomlist = (result) => ({\n  type: RX_MYROOMLIST,\n  result,\n});\n\nexport const rx_allroomlist = (result) => ({\n  type: RX_ALLROOMLIST,\n  result,\n});\n\nexport const rx_allmsglist = (result) => ({\n  type: RX_ALLMSGLIST,\n  result,\n});\n\nexport const rx_focusmsg = (result) => ({\n  type: RX_FOCUSMSG,\n  result,\n});\n\nexport const rx_remove = (key) => ({\n  type: RX_REMOVE,\n  key,\n});\n\nexport const rx_focusroom = (result) => ({\n  type: RX_FOCUSROOM,\n  result,\n});\n\nconst initialState = {\n  authenticated: false,\n  all_users: [],\n  me: {},\n  all_connected: \"\",\n  myroomlist: [],\n  allroomlist: [],\n  allmsglist: [],\n  focusmsg: [],\n  focusroom: \"\",\n};\n\nfunction chats(state = initialState, action) {\n  switch (action.type) {\n    case RX_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: action.result,\n      };\n    case RX_ALL_USERS:\n      return {\n        ...state,\n        all_users: action.result,\n      };\n    case RX_ME:\n      return {\n        ...state,\n        me: action.result,\n      };\n    case RX_CONNECTED:\n      return {\n        ...state,\n        all_connected: action.result,\n      };\n    case RX_MYROOMLIST:\n      return {\n        ...state,\n        myroomlist: action.result,\n      };\n    case RX_ALLROOMLIST:\n      return {\n        ...state,\n        // item.name.push(all_users.filter((data) => data.uid === item.uid))\n        allroomlist: action.result,\n      };\n    case RX_ALLMSGLIST:\n      return {\n        ...state,\n        allmsglist: action.result,\n      };\n    case RX_FOCUSMSG:\n      return {\n        ...state,\n        focusmsg: action.result,\n      };\n    case RX_REMOVE:\n      return {\n        ...state,\n        focusmsg: state.focusmsg.filter((todo) => todo.key !== action.key),\n      };\n    case RX_FOCUSROOM:\n      return {\n        ...state,\n        focusroom: action.result,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default chats;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAtKM1gMUkzx8Al9G5Y6jozCsTTezqmo4M\",\n  authDomain: \"dongtalk-82851.firebaseapp.com\",\n  databaseURL: \"https://dongtalk-82851-default-rtdb.firebaseio.com\",\n  projectId: \"dongtalk-82851\",\n  storageBucket: \"dongtalk-82851.appspot.com\",\n  messagingSenderId: \"63820293757\",\n  appId: \"1:63820293757:web:1d2960afd6d6ddf589b314\",\n  measurementId: \"G-E7K9VBW4D0\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const fire = firebase;\nexport const fireauth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const firedatabase = firebase.database();\n\n//const provider = new firebase.auth.GoogleAuthProvider();\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\n//provider.setCustomParameters({prompt: 'select_account'});\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\n\n// export default firebase;\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.\n","import { fireauth, firedatabase } from \"../services/firebase\";\n\n//회원가입 함수\nexport function signUp(member) {\n  return fireauth\n    .createUserWithEmailAndPassword(member.email, member.password)\n    .then(() => {\n      console.log(\"signUp()가입성공\", member.email, member.password);\n      // 여기는 별도 회원 데이터 저장하기 위한 기능\n      var newPostKey = firedatabase.ref(\"all_users\").push().key;\n      var postData = {\n        email: member.email,\n        name: member.name,\n        password: member.password,\n        uid: fireauth.currentUser.uid,\n        key: newPostKey,\n      };\n      var updates = {};\n      updates[\"/all_users/\" + newPostKey] = postData;\n      return firedatabase.ref().update(updates);\n      // //여기는 별도 회원 데이터 저장하기 위한 기능\n    })\n    .catch((error) => {\n      alert(\n        error.message ===\n          \"The email address is already in use by another account.\" &&\n          \"이미 있는 아이디입니다.\"\n      );\n    });\n}\n\n//이메일 로그인 함수\nexport function signIn(member) {\n  return fireauth\n    .signInWithEmailAndPassword(member.email, member.password)\n    .then(() => {\n      //dispatch({ type: \"LOGIN_SUCCESS\" });\n      console.log(\"signIn()로그인성공\");\n    })\n    .catch((err) => {\n      //dispatch({ type: \"LOGIN_ERROR\", err });\n      console.log(\"signIn()실패\");\n    });\n}\n\n//로그아웃\nexport function logout() {\n  firedatabase.ref(`UsersConnection/${fireauth.currentUser.uid}`).set({\n    connection: false,\n    uid: fireauth.currentUser.uid,\n  });\n  return fireauth\n    .signOut()\n    .then(() => {\n      // Sign-out successful.\n      console.log(\"로그아웃 성공\");\n    })\n    .catch((error) => {\n      // An error happened.\n      console.log(\"로그아웃 실패\");\n    });\n}\n\n\n\n\n\nexport const removeRooms = (key, me, rx_focusroom, rx_msglist) => {\n  var mePassword = prompt(\"본인의 비밀번호를 입력하세요\");\n  if (me.password === mePassword) {\n    firedatabase.ref(`room/${key}`).remove();\n    firedatabase.ref(`msg/${key}`).remove();\n    rx_focusroom(\"\");\n    rx_msglist(\"\");\n    alert(\"삭제가 완료되었습니다.\");\n  } else {\n    alert(\"비밀번호가 틀려서 삭제 불가합니다\");\n  }\n};\n\n//##########################################################\n//########### 실시간 접속여부 관련된 함수들 ################\n//##########################################################\n\nexport function me_connected(all_connected, uid) {\n  //실제 화면단 포문 도는곳에\n  //all_connected:리덕스의 all_connected 를 넣어주고\n  //uid:리덕의 all_users가 포문 돌면서 하나하나 접근할때 있는 uid값\n  if (all_connected !== \"\") {\n    // console.log(\"######################################\");\n    // console.log(\"all_connected\", all_connected);\n    // console.log(\"uid\", uid);\n    const found = all_connected.filter((element) => element.uid === uid);\n    // console.log(\n    //   \"foundfoundfoundfoundfoundfoundfoundfoundfoundfoundfoundfound\",\n    //   found\n    // );\n    return found.length > 0 && found[0].connection;\n  }\n}\n","import { fire, fireauth, firedatabase } from \"../services/firebase\";\r\n\r\n\r\n\r\n//##########################################################\r\n//########### 로그인 여부를 판단해주는 함수(firebase) ################\r\n//##########################################################\r\nexport function CM_login_state(rx_authenticated) {\r\n    fireauth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        //로그인상태---\r\n        console.log(\"App/로그인\", user);\r\n        //#########################\r\n        connected(true);\r\n        rx_authenticated(true); //현재 로그인 여부 파악을 위한 값\r\n        //#########################\r\n      } else {\r\n        //로그아웃상태---\r\n        console.log(\"App/로그아웃\", user);\r\n        //#########################\r\n        connected(false);\r\n        rx_authenticated(false); //현재 로그인 여부 파악을 위한 값\r\n        //#########################\r\n      }\r\n    });\r\n};\r\n//##########################################################\r\n\r\n\r\n//##########################################################\r\n//########### 실시간 접속여부 관련된 함수들 ################\r\n//##########################################################\r\nexport function connected(authenticated) {\r\n  if (authenticated === true) {\r\n    var userUid = fireauth.currentUser.uid;\r\n    var myConnectionsRef = firedatabase.ref(`UsersConnection/${userUid}`);\r\n    var connectedRef = firedatabase.ref(\".info/connected\");\r\n    connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        console.log(\"connected\");\r\n        myConnectionsRef.set({\r\n          connection: true,\r\n          uid: userUid,\r\n        });\r\n      } else {\r\n        console.log(\"not connected\");\r\n        myConnectionsRef.set({\r\n          connection: false,\r\n          uid: userUid,\r\n        });\r\n      }\r\n    });\r\n    myConnectionsRef.onDisconnect().set({ connection: false, uid: userUid });\r\n  }\r\n}\r\n//##########################################################\r\n\r\n\r\n//##########################################################\r\n//########### 로그인 유지 (브라우져 닫으면 로그인 유지 풀림) ################\r\n//##########################################################\r\nexport function login_maintain(member) {\r\n    console.log('member',member);\r\n  fireauth\r\n    .setPersistence(fire.auth.Auth.Persistence.SESSION)\r\n    .then(() => {\r\n      //로그인 유지 중\r\n      console.log(\"로그인 유지 중\");\r\n      return fireauth.signInWithEmailAndPassword(member.email, member.password);\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      console.log(\"로그인 유지 실패\");\r\n\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(\"errorCode\", errorCode);\r\n      console.log(\"errorMessage\", errorMessage);\r\n    });\r\n};\r\n//##########################################################\r\n\r\n\r\n//##########################################################\r\n//########### 유저 현재 접속 여부 확인을 위한 데이터 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_connectValue(rx_connected) {\r\n  //firebase 에서 connect 안의 데이터전부를 불러와서 리덕스(rx_connected)에 넣어주기\r\n  // console.log(\"fireauth.currentUser.uid\", fireauth.currentUser.uid);\r\n  firedatabase.ref(`UsersConnection`).on(\"value\", (snapshot) => {\r\n    console.log(\"sfajklas\", Object.values(snapshot.val()));\r\n    rx_connected(Object.values(snapshot.val()));  //리덕스에도 넣어주기\r\n  });\r\n}\r\n//##########################################################\r\n\r\n\r\n//##########################################################\r\n//########### 유저 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_all_users(rx_all_users,rx_me,me) {\r\n    firedatabase.ref(\"all_users\").on(\"value\", (snapshot) => {\r\n      let response = Object.values(snapshot.val());\r\n      rx_all_users(response); //리덕스에도 넣어주기\r\n      console.log(\"response\", response);\r\n\r\n      const me = response.filter((data) =>\r\n        data.uid.includes(fireauth.currentUser.uid)\r\n      );\r\n      rx_me(me); //리덕스에도 넣어주기\r\n      login_maintain(me[0]);\r\n      console.log(\"me\", me);\r\n    });\r\n};\r\n//##########################################################\r\n\r\n\r\n//##########################################################\r\n//########### 전체 방 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allroomlist(rx_allroomlist,rx_myroomlist) {\r\n    firedatabase.ref(\"room\").on(\"value\", (snapshot) => {\r\n      if (snapshot.val() !== null) {\r\n        let response = Object.values(snapshot.val());\r\n        console.log(\"roomListBox\", response);\r\n        rx_allroomlist(response);\r\n\r\n        const found = response.filter((element) =>\r\n          element.uid.some((item) => item === fireauth.currentUser.uid)\r\n        );\r\n        rx_myroomlist(found);\r\n        console.log(\"found\", found);\r\n      }\r\n    });\r\n};\r\n//##########################################################\r\n\r\n\r\n//##########################################################\r\n//########### 메세지 리스트 데이타를 불러오기(firebase) ################\r\n//##########################################################\r\nexport function CM_allmsglist(rx_allmsglist) {\r\n    firedatabase.ref(\"msg\").on(\"value\", (snapshot) => {\r\n      if (snapshot.val() !== null) {\r\n        let response = snapshot.val();\r\n          rx_allmsglist(response)\r\n      }\r\n    });\r\n};\r\n//##########################################################\r\n\r\n\r\n//##### 메시지 삭제 #####\r\nexport const removeChats = (room, key, rx_remove) => {\r\n  firedatabase.ref(`msg/${room}/${key}`).remove();\r\n  rx_remove(key);\r\n  console.log(\"메롱\", room, key);\r\n}; //removeChats\r\n\r\n\r\n\r\n\r\n//##### 메시지 보내기 #####\r\nexport function sendChat(msg, focusroom) {\r\n  if (focusroom !== \"\") {\r\n    var newPostKey = firedatabase.ref(`msg/${focusroom}`).push().key;\r\n\r\n    var postData = {\r\n      message: msg.message,\r\n      timestamp: msg.timestamp,\r\n      uid: msg.uid,\r\n      key: newPostKey,\r\n      name: msg.name,\r\n    };\r\n\r\n    var updates = {};\r\n    updates[`msg/${focusroom}/${newPostKey}`] = postData;\r\n    return firedatabase.ref().update(updates);\r\n  } else {\r\n    alert(\"방을 선택해주세요\");\r\n  }\r\n} //sendChat","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nexport default PublicRoute;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signUp } from \"../helpers/databox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Button component={Link} to=\"https://material-ui.com/\">\n        Your Website\n      </Button>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp() {\n  const classes = useStyles();\n  const [member, setMember] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n  });\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setMember({ ...member, [name]: value });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (member.email !== \"\" && member.password !== \"\" && member.name !== \"\") {\n      signUp(member);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          회원 가입\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={member.email}\n                onChange={handleOnChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                value={member.name}\n                onChange={handleOnChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={member.password}\n                onChange={handleOnChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            가입하기\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              이미 회원이신가?{\" \"}\n              <Button component={Link} to=\"/login\">\n                로그인\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignUp\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { signIn } from \"../helpers/databox\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  CssBaseline,\n  Container,\n} from \"@material-ui/core\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Button component={Link} to=\"https://material-ui.com/\">\n        Your Website\n      </Button>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login() {\n  const classes = useStyles();\n  const [member, setMember] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setMember({ ...member, [name]: value });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (member.email !== \"\" && member.password !== \"\") {\n      signIn(member);\n    }\n  };\n\n  // const handleGoogleSignIn = async () => {\n  //   try {\n  //     await signInWithGoogle();\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          로그인\n        </Typography>\n        <form className={classes.form} onSubmit={handleOnSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"이메일을 입력하세요.\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={member.email}\n            onChange={handleOnChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={member.password}\n            onChange={handleOnChange}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          {/* <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleGoogleSignIn}\n            className={classes.submit}\n          >\n            구글 로그인\n          </Button> */}\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n            </Grid>\n            <Grid item>\n              <Button component={Link} to=\"/signup\">\n                {\"회원가입\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { removeRooms } from \"../helpers/databox\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { rx_focusroom, rx_focusmsg } from \"../modules/chats\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst FriendItem = ({\r\n  img,\r\n  text,\r\n  sub,\r\n  uid,\r\n  msg_key,\r\n  me,\r\n  invisible,\r\n  event,\r\n  rx_focusroom,\r\n  rx_focusmsg,\r\n}) => {\r\n  return (\r\n    <li style={{ display: msg_key ? \"flex\" : \"block\" }}>\r\n      <ListItem button onClick={() => (msg_key ? event(msg_key) : event(uid))}>\r\n        <ListItemAvatar>\r\n          <StyledBadge\r\n            invisible={invisible}\r\n            overlap=\"circular\"\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"right\",\r\n            }}\r\n            variant=\"dot\"\r\n          >\r\n            <Avatar alt=\"Remy Sharp\" src={img} />\r\n          </StyledBadge>\r\n\r\n          {/* <Avatar>\r\n                  <BeachAccessIcon />\r\n                </Avatar> */}\r\n        </ListItemAvatar>\r\n        <ListItemText primary={text} secondary={sub} />\r\n      </ListItem>\r\n      {msg_key && (\r\n        <Button\r\n          onClick={() => removeRooms(msg_key, me, rx_focusroom, rx_focusmsg)}\r\n        >\r\n          삭제\r\n        </Button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FriendItem);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FriendItem from \"./FriendItem\";\r\n\r\nimport { Box, List } from \"@material-ui/core\";\r\n\r\nimport { me_connected } from \"../helpers/databox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  list: {\r\n    height: \"240px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  divider: {\r\n    // margin: '20px 0',\r\n  },\r\n}));\r\n\r\nconst FriendList = ({ title, data, event, all_users, all_connected, me }) => {\r\n  const classes = useStyles();\r\n\r\n  function uid_name(names) {\r\n    return (\r\n      names !== undefined &&\r\n      all_users.length > 0 &&\r\n      all_users.filter((data) => data.uid === names)[0].name\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]FriendList.js\");\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <ListSubheader>{title}</ListSubheader>\r\n\r\n      <List className={classes.list}>\r\n        {data.length > 0 ? (\r\n          data.map((data, index) => (\r\n            <FriendItem\r\n              key={index}\r\n              invisible={!me_connected(all_connected, data.uid)}\r\n              img=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n              text={\r\n                Array.isArray(data.uid)\r\n                  ? data.uid.map((item, index) =>\r\n                      index > 0 ? `/${uid_name(item)}` : uid_name(item)\r\n                    )\r\n                  : uid_name(data.uid)\r\n              }\r\n              sub={data.email === undefined ? \"1:1 대화방\" : data.email}\r\n              uid={data.uid}\r\n              msg_key={data.msg_key}\r\n              me={me}\r\n              event={event}\r\n            />\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n\r\n      {/* <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현\" sub=\"dongdong@stunitas.com\" />\r\n          </List>\r\n          \r\n          <Divider className={classes.divider} />\r\n          <ListSubheader>나의 방 리스트</ListSubheader>\r\n          <List className={classes.list}>\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n            <FriendItem img=\"https://material-ui.com/static/images/avatar/1.jpg\" text=\"김동현/박금주\" sub=\"1:1 대화방\" />\r\n          </List> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  all_connected: state.chats.all_connected,\r\n  me: state.chats.me[0],\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   rx_focusroom: (val) => {\r\n//     dispatch(rx_focusroom(val));\r\n//   },\r\n// });\r\n\r\nexport default connect(mapStateToProps, null)(FriendList);\r\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { firedatabase } from \"../services/firebase\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { connect } from \"react-redux\";\n\nimport { blue } from \"@material-ui/core/colors\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open, data, focusroom } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n    console.log(\"까르르르궁\", data);\n  };\n\n  const handleListItemClick = (uid) => {\n    firedatabase.ref(`room/${focusroom}/uid`).once('value').then((snapshot) => {\n      const f_add = snapshot.val();\n  \n      if (!f_add.includes(uid)) {\n        //중복 친구가 없는경우 추가\n        f_add.push(uid);\n        firedatabase.ref(`room/${focusroom}`)\n          .update({\n            uid:f_add\n          })\n          .then(() => {\n            console.log('친추 완료', f_add);\n          })\n          .catch((error) => {\n            console.log('친추 실패');\n          });\n      } else {\n        //중복 친구가 있는경우 알럿 노출\n        alert('이미 추가된 친구입니다.');\n      };\n    });\n    onClose(false);\n  };\n  \n  console.log(\"까르르르궁\", data);\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {data.length > 0 ? (\n          data.map((item, index) => (\n            <ListItem\n              button\n              onClick={() => handleListItemClick(item.uid)}\n              key={index}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.email} />\n            </ListItem>\n          ))\n        ) : (\n          <li>리스트가없습니다.</li>\n        )}\n      </List>\n    </Dialog>\n  );\n}\n\n// SimpleDialog.propTypes = {\n//   onClose: PropTypes.func.isRequired,\n//   open: PropTypes.bool.isRequired,\n//   selectedValue: PropTypes.string.isRequired,\n// };\n\nconst FriendAdd = ({ all_users,focusroom }) => {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        친구추가\n      </Button>\n      <SimpleDialog\n        data={all_users}\n        focusroom={focusroom}\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  all_users: state.chats.all_users,\n  // myroomlist: state.chats.myroomlist,\n  // allroomlist: state.chats.allroomlist,\n  // me: state.chats.me[0],\n  focusroom: state.chats.focusroom,\n});\n\n//   const mapDispatchToProps = (dispatch) => ({\n//     rx_all_users: (val) => {\n//       dispatch(rx_all_users(val));\n//     },\n//     rx_me: (val) => {\n//       dispatch(rx_me(val));\n//     },\n//     rx_myroomlist: (val) => {\n//       dispatch(rx_myroomlist(val));\n//     },\n//     rx_allroomlist: (val) => {\n//       dispatch(rx_allroomlist(val));\n//     },\n//     rx_focusroom: (val) => {\n//       dispatch(rx_focusroom(val));\n//     },\n//     rx_msglist: (val) => {\n//       dispatch(rx_msglist(val));\n//     },\n//   });\n\nexport default connect(mapStateToProps, null)(FriendAdd);\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { rx_remove } from \"../modules/chats\";\r\nimport { fireauth } from \"../services/firebase\";\r\n\r\nimport * as dateFns from \"date-fns\";\r\nimport { removeChats } from \"../helpers/common\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport FriendAdd from \"./FriendAdd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  lBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  rBox: {\r\n    flexDirection: \"row-reverse\",\r\n    display: \"flex\",\r\n    textAlign: \"right\",\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    \"& input,& button\": {\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n    },\r\n  },\r\n\r\n  listBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  listBoxItem: {},\r\n  listBoxItemavatar: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst Message = ({ focusmsg ,focusroom, rx_remove }) => {\r\n  const classes = useStyles();\r\n  console.log(\"Message-focusroom\", focusroom);\r\n  const intervalId = useRef(null);\r\n\r\n\r\n\r\n\r\nfunction scrollToMyRef (){\r\n    const scroll =\r\n      intervalId.current.scrollHeight -\r\n      intervalId.current.clientHeight;\r\n    intervalId.current.scrollTo(0, scroll);\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Message.js\");\r\n    scrollToMyRef();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [focusmsg, focusroom]);\r\n\r\n  return (\r\n    <Box style={{ height: \"577px\", overflowY: \"scroll\", paddingBottom: \"15%\" }} ref={intervalId}>\r\n      <ListSubheader style={{ display:'flex',justifyContent:'space-between',backgroundColor:'#fff' }}>\r\n        채팅방\r\n        {focusroom !== \"\" &&\r\n          <FriendAdd />\r\n        }\r\n      </ListSubheader>\r\n      <List className={classes.listBox}>\r\n        {focusmsg.length > 0 ? (\r\n          focusmsg.map((data, index) => (\r\n            <ListItem key={index} className={classes.listBoxItem}>\r\n              <ListItemAvatar\r\n                className={classes.listBoxItemavatar}\r\n                style={{\r\n                  justifyContent: false ? \"flex-end\" : \"flex-start\",\r\n                }}\r\n              >\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n              </ListItemAvatar>\r\n\r\n              <ListItemText\r\n                primary={data.name}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      color=\"textPrimary\"\r\n                      style={{ wordBreak: \"break-all\" }}\r\n                    >\r\n                      {data.message}\r\n                    </Typography>\r\n                    <br />\r\n                    {dateFns.format(data.timestamp, \"yyyy-MM-dd-HH-mm-ss\")}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              <Button\r\n                  style={{\r\n                    display:\r\n                      fireauth.currentUser.uid !== data.uid\r\n                        ? \"none\"\r\n                        : \"inline-flex\",\r\n                  }}\r\n                onClick={() => removeChats(focusroom, data.key, rx_remove)}\r\n              >\r\n                삭제\r\n              </Button>\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <li>리스트가없습니다.</li>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_remove: (val) => {\r\n    dispatch(rx_remove(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fireauth } from \"../services/firebase\";\r\nimport { sendChat } from \"../helpers/common\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Box, Button, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  InputBox: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    width: \"93%\",\r\n    margin: \"2%\",\r\n    padding: \"2%\",\r\n    boxShadow: \"1px 1px 5px #a0a0a0\",\r\n    borderRadius: \"5px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InputBox = ({ focusroom, me }) => {\r\n  const classes = useStyles();\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    sendChat(\r\n      {\r\n        message: msg,\r\n        timestamp: Date.now(),\r\n        uid: fireauth.currentUser.uid,\r\n        name:\r\n          fireauth.currentUser.displayName === null\r\n            ? me.name\r\n            : fireauth.currentUser.displayName,\r\n      },\r\n      focusroom\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumbit}>\r\n      <Box className={classes.InputBox}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"메시지\"\r\n          value={msg}\r\n          onChange={handleOnChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          endIcon={<SendIcon />}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  focusroom: state.chats.focusroom,\r\n  me: state.chats.me[0],\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(InputBox);","import React, { useEffect } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { firedatabase } from \"../services/firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { CM_all_users, CM_allroomlist, CM_allmsglist, login_maintain, CM_connectValue } from \"../helpers/common\";\r\n\r\nimport {\r\n  rx_all_users,\r\n  rx_me,\r\n  rx_myroomlist,\r\n  rx_allroomlist,\r\n  rx_focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  rx_focusmsg\r\n} from \"../modules/chats\";\r\n\r\nimport {\r\n  CssBaseline,\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport FriendList from \"../components/FriendList\";\r\nimport Message from \"../components/Message\";\r\nimport InputBox from \"../components/InputBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //height:'450px'\r\n  },\r\n  chat_wrap: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"577px\",\r\n  },\r\n}));\r\n\r\nconst Chat = ({\r\n  rx_all_users,\r\n  all_users,\r\n  rx_me,\r\n  me,\r\n  rx_myroomlist,\r\n  myroomlist,\r\n  rx_allroomlist,\r\n  allroomlist,\r\n  rx_focusroom,\r\n  focusroom,\r\n  rx_allmsglist,\r\n  rx_connected,\r\n  allmsglist,\r\n  rx_focusmsg,\r\n  focusmsg\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleFriend = (you) => {\r\n    const data = [me.uid, you];\r\n    const clone_data = [me.uid, you].sort();\r\n    console.log(\"handleFriend\", data[0], data[1]);\r\n\r\n    console.log(allroomlist);\r\n    let clone_allroomlist = JSON.parse(JSON.stringify(allroomlist));\r\n    clone_allroomlist = clone_allroomlist.some(\r\n      (element) =>\r\n        JSON.stringify(element.uid.sort()) === JSON.stringify(clone_data)\r\n    );\r\n\r\n    if (!clone_allroomlist) {\r\n      var newPostKey = firedatabase.ref(\"room\").push().key;\r\n      var postData = {\r\n        uid: [me.uid, you],\r\n        name: [],\r\n        msg_key: newPostKey,\r\n      };\r\n      var updates = {};\r\n      updates[\"/room/\" + newPostKey] = postData;\r\n      return firedatabase.ref().update(updates);\r\n    } else {\r\n      alert(\"이미 방이 존재합니다.\");\r\n    }\r\n  };\r\n\r\n  const handleRoom = (msg_key) => {\r\n    rx_focusroom(msg_key);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[표시]Chat.js\");\r\n    CM_connectValue(rx_connected);\r\n    CM_all_users(rx_all_users, rx_me, me);\r\n    CM_allroomlist(rx_allroomlist, rx_myroomlist);\r\n    CM_allmsglist(rx_allmsglist);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    allmsglist[focusroom] ? rx_focusmsg(Object.values(allmsglist[focusroom])) : rx_focusmsg([]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allmsglist,focusroom]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\" className={classes.root}>\r\n        <Paper className={classes.chat_wrap} elevation={1}>\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={12} sm={4} className={classes.sectionDesktop}>\r\n              <FriendList\r\n                title=\"전체 친구 리스트\"\r\n                data={all_users}\r\n                event={handleFriend}\r\n              />\r\n              <Divider />\r\n              <FriendList\r\n                title=\"나의 방 리스트\"\r\n                data={myroomlist}\r\n                event={handleRoom}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} style={{ position: \"relative\" }}>\r\n              <Message focusmsg={focusmsg} />\r\n              <InputBox />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n\r\nChat.propTypes = {\r\n  // rx_authenticated: PropTypes.func,\r\n  // authenticated: PropTypes.bool,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  all_users: state.chats.all_users,\r\n  myroomlist: state.chats.myroomlist,\r\n  allroomlist: state.chats.allroomlist,\r\n  me: state.chats.me[0],\r\n  focusroom: state.chats.focusroom,\r\n  allmsglist: state.chats.allmsglist,\r\n  focusmsg: state.chats.focusmsg,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rx_all_users: (val) => {\r\n    dispatch(rx_all_users(val));\r\n  },\r\n  rx_me: (val) => {\r\n    dispatch(rx_me(val));\r\n  },\r\n  rx_myroomlist: (val) => {\r\n    dispatch(rx_myroomlist(val));\r\n  },\r\n  rx_allroomlist: (val) => {\r\n    dispatch(rx_allroomlist(val));\r\n  },\r\n  rx_focusroom: (val) => {\r\n    dispatch(rx_focusroom(val));\r\n  },\r\n  rx_allmsglist: (val) => {\r\n    dispatch(rx_allmsglist(val));\r\n  },\r\n  rx_connected: (val) => {\r\n    dispatch(rx_connected(val));\r\n  },\r\n  login_maintain: (val) => {\r\n    dispatch(login_maintain(val));\r\n  },\r\n  rx_focusmsg: (val) => {\r\n    dispatch(rx_focusmsg(val));\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HashRouter, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { rx_authenticated } from \"./modules/chats\";\nimport { logout } from \"./helpers/databox\";\nimport { CM_login_state } from \"./helpers/common\";\n\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport SignUp from \"./containers/SignUp\";\nimport Login from \"./containers/Login\";\nimport Chat from \"./containers/Chat\";\n\nfunction App({ rx_authenticated, authenticated }) {\n  useEffect(() => {\n    console.log(\"[표시]App.js\");\n    CM_login_state(rx_authenticated);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <HashRouter>\n      <Switch>\n        <PrivateRoute\n          path=\"/chat\"\n          authenticated={authenticated}\n          component={Chat}\n        />\n        <PublicRoute\n          path=\"/signup\"\n          authenticated={authenticated}\n          component={SignUp}\n        />\n        <PublicRoute\n          path={[\"/\", \"/login\"]}\n          authenticated={authenticated}\n          component={Login}\n        />\n      </Switch>\n      {authenticated &&\n        <button\n          onClick={() => {\n            // connectCheck(false);\n            logout();\n          }}\n        >\n          로그아웃\n        </button>\n      }\n    </HashRouter>\n  );\n}\n\n\nApp.propTypes = {\n  rx_authenticated: PropTypes.func,\n  authenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.chats.authenticated,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  rx_authenticated: (val) => {\n    dispatch(rx_authenticated(val));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport chats from \"./chats\";\n// import auth from \"./auth\";\n\nconst rootReducer = combineReducers({\n  chats,\n  // auth,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport rootReducer from \"./modules\";\nimport { createLogger } from \"redux-logger\";\n\nconst logger = createLogger();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}